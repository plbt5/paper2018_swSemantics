{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0   }
\par\plain {\f0\fs24\b0\i0   *Context:* Semantics and software are on odds with each other. Semiotics shows that genuine semantics cannot exist in software. Current artificial intelligence cannot solve this incompatibility and depends on the expensive human-in-the-loop. Semantics still remain ambiguous with an emerging semantic monolith applying to the initial project team only. Furthermore, changing reality demands semantics to evolve, reducing its reusability even more, enforcing new projects to (re)start semantic modelling. Therefore, an initial agreement is required on the foundations of semantics and the role of the human-in-the-loop.        }
\par\plain {\f0\fs24\b0\i0   }
\par\plain {\f0\fs24\b0\i0   *Objective:* To investigate how to abstract and consolidate semantics in contemporary software architectures by identifying and formulating a fundamental notion on semantics in software and its supporting architectural principles. To provide guidance to its design and integration in contemporary architectural paradigms, with less human-in-the-loop.    }
\par\plain {\f0\fs24\b0\i0   }
\par\plain {\f0\fs24\b0\i0   *Method:* We base our work on disciplines outside ICT, viz semiotics, pragmatics and linguistic philosophy, and connect that with formal semantics and ontology, metamodeling, and modelling languages. We investigate the relation between software semantics and regular architecture. We formulate all findings as architectural principles and consolidate them in distinct and explicit architectural artifacts. We evaluate these principles by designing an ISO-42010 Architecture Viewpoint and View on software semantics.   }
\par\plain {\f0\fs24\b0\i0   }
\par\plain {\f0\fs24\b0\i0   *Results:* We reduce semantics in software to the reciprocity between data and data processing, and modularise its inevitable semantic monolith. Our ISO-42010 View consolidates the role and function of semantics in contemporary architectural paradigms as a tangible artifact. Software semantics become another foundation in software from which semantic reusability and interoperability emerge as system engineering benefits.  }
\par\plain {\f0\fs24\b0\i0   }
\par\plain {\f0\fs24\b0\i0   *Conclusions:* Our introduction of nine architectural principles on semiotics, pragmatics and ontological commitment provides for the capability to explicitly include and consolidate software semantics in contemporary architectural paradigms as a distinguished artifact.    }
\par\plain \f0\fs24\b0\i0}