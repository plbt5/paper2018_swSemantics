{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 In contemporary architectural paradigms, models are being used as first class citizens to the architectures; MDA, IEEE-1471 and ISP RM/ODP alike. It is therefore imperative to decide upon the major characteristics of the Domain Model that is used to capture semantics, and contrast these with the characteristics of the System Model that capture system specifications. The main differentiation is in their purpose; where the latter refers to the system under construction, the former refers to a particular reality: the DoA. The first main semiotic characteristic already implied by previous figures is that a model is just a compound token. Other modes of models [@Henderson-Sellers2012, p.33] ground in three dichotomies, and in the different meanings assigned to the term model. We consider these and other model characteristics from literature and specify their distinct use between Domain and System Models in \\cref\{tab:onto-versus-model\}.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 --------------------------------------------------------------------------------------------------------------------------------------------------------------}
\par\plain {\f0\fs24\b0\i0 Characteristic           Description                              Domain Model                                  System Model}
\par\plain {\f0\fs24\b0\i0 ------------------------ ---------------------------------------- --------------------------------------------- ----------------------------------------------}
\par\plain {\f0\fs24\b0\i0 Type vs. tokens mode     Type mode: captures universal            Always a type mode, carrying concepts and     Type mode and token mode can be applied  }
\par\plain {\f0\fs24\b0\i0 [@Henderson-Sellers2012] characteristics as surjective mappings   their relations in terms of universals.       independently from each other for distinct  }
\par\plain {\f0\fs24\b0\i0                          from specific instances onto one set.    Application of token mode might be included   models, but it essentially revolves around the}
\par\plain {\f0\fs24\b0\i0                          Token mode: captures singular            for, e.g., reasoning or code lists, but       data, which demands for tokens mode models.            }
\par\plain {\f0\fs24\b0\i0                          characteristics as granularity           remains of secondary importance.  }
\par\plain {\f0\fs24\b0\i0                          abstractions only (subsumption).                                               }
\par\pard\plain \ri-16974\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Backward vs.             Forward: Prescriptive, specifying how    Always backward looking.                      Mainly forward looking.   }
\par\plain {\f0\fs24\b0\i0 forward mode             the subject is supposed to be. }
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 [@Henderson-Sellers2012] Backward: Descriptive, addresses an }
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0                          existing or past state of affairs.                                                   }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Ontological vs.          Linguistic instantiation (with an        Ontological mode, viz. convention-based       Linguistic mode, viz. }
\par\plain {\f0\fs24\b0\i0 linguistic mode          instance-of relation between a class and principle of identity and a non-transitive    intrinsically-based identity label and a  }
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 [@Henderson-Sellers2012] its objects) versus ontological          instance-of relation.                         transitive instance-of relation.}
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0                          instantiation (with instance-of }
\par\plain {\f0\fs24\b0\i0                          relations between universals and }
\par\plain {\f0\fs24\b0\i0                          particulars).      }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 Meaning of               ICT architects refer to the diagram that Theories that are allowed by the grammar      A set of related diagrams, e.g., a UML state                      }
\par\plain {\f0\fs24\b0\i0 \\token\{model\}            is drawn, prescribing the system         of the modelling language. The model          diagram or class diagram, that prescribe how }
\par\plain {\f0\fs24\b0\i0 [@Henderson-Sellers2012] component as blueprint for, e.g.,        refers to both the data and their schema.     the data should be structured and what  }
\par\plain {\f0\fs24\b0\i0                          behaviour. More formal, it refers to                                                   behaviour should be applied.}
\par\plain {\f0\fs24\b0\i0                          theories that are allowed by the grammar }
\par\plain {\f0\fs24\b0\i0                          of the language [@Chomsky1957, p.13].                          }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 $\\;$}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 Focus                    REFERENTIE                               Explanatory & understanding                   Constructive & realisation  }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Objects of interest      Characterising the model in terms of     The categories of being which are assumed to  The structures of propositions, viz.         }
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 [@Carraretto2012]        its elements                             exist in a certain domain independently of    information, about a domain, characterising            }
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0                                                                   particular information demands.               a certain information demand as one design }
\par\plain {\f0\fs24\b0\i0                                                                                                                 structure among many possible ones.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Ontological              Refer to previous section.               Can be added as Foundational Ontology,        The meta-meta-model functions as    }
\par\plain {\f0\fs24\b0\i0 commitment (OC)                                                   without which a strict logical foundation     ontological commitment, which was never     }
\par\plain {\f0\fs24\b0\i0                                                                   remains which provides a neutral commitment,  intended to specify the fundamental   }
\par\plain {\f0\fs24\b0\i0                                                                   viz. none, only.                              distinctions in reality to commit to.  }
\par\plain {\f0\fs24\b0\i0                                                                                                                 Instead, a MOF-oriented OC commits to an }
\par\plain {\f0\fs24\b0\i0                                                                                                                 object-oriented view which, essentially,  }
\par\plain {\f0\fs24\b0\i0                                                                                                                 acknowledges a Turing machine.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Model foundation         Formalisation of the model.              Logic, particularly description logic. Using  First order predicate logic with Closed world }
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 [@Henderson-Sellers2012]                                          Open world assumption (OWA), which maintains  assumption (CWA), which maintains data  }
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0                                                                   a semantic under-specification.               consistency and query performance (databases).}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Purpose of constraints                                            Axioms constrain the possible interpretations Constraints enforce integrity of the data,  }
\par\plain {\f0\fs24\b0\i0                                                                   of theories, and scope the reasoning.         and optimise processing performance.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Source of truth          The truth of a statement from the model  Reality                                       Meta-model}
\par\plain {\f0\fs24\b0\i0 [@Muller2012, p.349]     must be found in what it refers to.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Truth validation         The way to establish the truth of a      Interpretation function                       MOF Reflection}
\par\plain {\f0\fs24\b0\i0                          statement from the model}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Type of Typing           Descriptive or nominal typing            Descriptive typing, i.e., membership of       Nominal typing, explicit relationships                                                      }
\par\plain {\f0\fs24\b0\i0 [@Kuhne2018]                                                      an instance to a type is only dependent on    exist between individuals and their types:   }
\par\plain {\f0\fs24\b0\i0                                                                   properties that are deemed necessary by       names are significant and subtyping is  }
\par\plain {\f0\fs24\b0\i0                                                                   convention (duck-typing). An explicit         explicitly declared. Intentions are implicit   }
\par\plain {\f0\fs24\b0\i0                                                                   equivalence relation between extension and    by name, extensions are explicit enumerations  }
\par\plain {\f0\fs24\b0\i0                                                                   intention is then *derived*.                  of type incarnation.  }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 --------------------------------------------------------------------------------------------------------------------------------------------------------------}
\par\pard\plain \ri-16974\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 Table: The main differences between a domain model and a system model. \\label\{tab:onto-versus-model\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 As explained by [@A\loch\af0\hich\af0\dbch\af0\uc1\u223\'DFmann2006]: "Specification models focus on the specification, control, and generation of systems; ontologies focus on description and conceptualisation (conceptual modelling) of things." We similarly consider ontologies a necessary component to formally represent the DoI and faithfully refer to the DoA. Still, contemporary modelling frameworks yield meta-models that have a clear engineering focus which is very suitable for forward-looking, prescriptive (system) models. Based on these model characteristics and in relation with \\cref\{dp:reciprocity,dp:semantic-coherence,dp:language-appropriateness\} and \\cref\{def:atomic-semantic-monolith\} we conclude that the faithfulness of the Domain Model is facilitated much better when formulated as ontology than as a diagram-based system model. Oppositely, forward looking models fall short in considering and modelling system characteristics, and in conjunction with \\cref\{dp:language-appropriateness\} \\cref\{tab:onto-versus-model\} above provides ample arguments to support the complementary use of backward looking models to prescribe the design of the system under construction. We formulate \\cref\{dp:domain-faithfulness\} to include the most important model characteristics.     }
\par\plain {\f0\fs24\b0\i0   }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 This leaves the question of the formal relationship that exist between them: how to characterise the relationship between the Domain Model with its ASM\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s and those models of the agent that are external to the Domain Models, collectively denoted as the System Model. This particular notion on architectural consistency will be addressed in the next section.}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 <!-- page additions -->}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 [def:ontoMDA]: src\\images\\OntosInMDE.png \{#fig:OntosInMDE  width=80%\}}
\par\pard\plain \ri-16974\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0}