{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 In contemporary architectural paradigms, models are being used as first class citizens to the architectures, MDA, IEEE-1471 and ISP RM/ODP alike. It is therefore imperative to decide upon the major characteristics of a model. The first main characteristic, and already implied by the previous figures, is that a model is just a compound token. Where one single token refers to a particular entity in reality, a model refers to a particular reality, viz. the domain of interest. In [@Henderson-Sellers2012], an in-depth treatise of models, meta-models, modelling languages and ontologies, further characteristics are derived from three dichotomies, or modes, that pertain to a model: the type vs. token modes (the latter completely unrelated to the token node of the semiotic sign), the forward- vs. backward-looking modes, and the ontological vs. linguistic modes, as follows.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 * In type mode, models represent different categories that exist in the modelled subject, and bring the number of individual elements back to one universal characteristic that they share: their type. Also known as a classification abstraction, this is a surjective mapping from specific instances onto one set. Type mode essentially represents the }{\f1\fs24\b0\i1 universals -- particulars}{\f0\fs24\b0\i0  dichotomy as identified in the ontological square (refer to \\cref\{fig:onto-square-and-sextet\}), and the relationship that it instantiates is an }{\f1\fs24\b0\i1 instance-of}{\f0\fs24\b0\i0  relationship, and consequently non-transitive. Contrarily, in token mode, models instantiate an }{\f1\fs24\b0\i1 equivalence}{\f0\fs24\b0\i0  relation, used to remove irrelevant distinctions between individuals in the modelled world, and therefore only reduces the granularity of the modelled subject. A relation is called equivalent if it is reflexive, symmetric and transitive. An example would be the relation about two humans sharing the same parents;}
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 * The distinction between descriptive and prescriptive models is broadly accepted, where a prescriptive model is used to }{\f1\fs24\b0\i1 specify}{\f0\fs24\b0\i0  its subject, and a descriptive model is used to }{\f1\fs24\b0\i1 describe}{\f0\fs24\b0\i0  its subject. As explained by [@Gonzalez-Perez2007], a specification model generally takes a }{\f1\fs24\b0\i1 forward-looking}{\f0\fs24\b0\i0  role, specifying how the subject is supposed to be. A descriptive model, on the other hand, generally takes a }{\f1\fs24\b0\i1 backward-looking}{\f0\fs24\b0\i0  role and addresses the subject as it currently is, or once has been. We observe that the characteristics of the }{\f1\fs24\b0\i1 refers-to}{\f0\fs24\b0\i0  relation from \\cref\{}{\f0\fs24\b0\i0\cf1 fig:semiotic-triangles\}(b) }{\f0\fs24\b0\i0 become declarative for a forward-looking model whereas they become descriptive for a backward-looking model. Therefore, the refers-to relation is a causal relation, the direction of which is dependent on the model\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s characteristic. This is consequential for the location of the truth of a model: For forward-looking models their truth lies in their meta-models. Mutatis mutandis, the truth for backward-looking models lies in the entities they describe, viz. reality. }
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 * The distinction between ontological and linguistic mode of modelling was first coined by [@Atkinson2003], and differentiates between linguistic instantiation and ontological instantiation. Essentially, it is about the distinction in meaning of the }{\f1\fs24\b0\i1 instance-of}{\f0\fs24\b0\i0  relation between the philosophical and meta-modelling viewpoint [@Eriksson2013a]. The philosophical point of view assumes a principle of identity, viz. that in accordance with which we establish whether two particulars are the same. The meta-modelling point of view assumes that the identity of an object is based on an inherent unique property of a thing, or the very substance of a thing, that we only have to name. The difference is the fact that the former is a social construct whereas the latter assumes it exists intrinsically in the real world.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Contemporary modelling frameworks yield meta-models that have a clear engineering focus which is very suitable for forward-looking, prescriptive (system) models. These meta-models are de-facto used as modelling language for the lower level, and despite their appropriateness in support of engineering principles and decisions that need to be made, they give rise to ontological commitments that fall short for backward-looking, descriptive models. Contrarily to modelling systems or components thereof, modelling a domain of interest require the use of backward-looking models also known as ontologies. We summarise the distinction between ontologies and (forward-looking) models in \\cref\{tab:onto-versus-model\}.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 --------------------------------------------------------------------------------------------------------------------------------}
\par\plain {\f0\fs24\b0\i0 Subject              Ontology                                          Model}
\par\plain {\f0\fs24\b0\i0 -------------------- ------------------------------------------------- ---------------------------------------------------------}
\par\pard\plain \ri-17053\ltrch\loch {\f0\fs24\b0\i0 Type vs. tokens mode The main design is a type mode, carrying concepts Type mode and token mode can be applied independently }
\par\plain {\f0\fs24\b0\i0                      and their relations in terms of Universals.       from each other, or merged into one model as well.}
\par\plain {\f0\fs24\b0\i0                      Inclusion of individuals is very well possible, }
\par\plain {\f0\fs24\b0\i0                      providing for a token mode as well.               }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Prescriptive vs.     Mainly backward looking                           Mainly forward looking. Backward looking models often }
\par\plain {\f0\fs24\b0\i0 descriptive mode                                                       apply a MOF-oriented ontological commitment or similar.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Ontological vs.      Ontological modelling.                            Mainly linguistic modelling.}
\par\plain {\f0\fs24\b0\i0 linguistic mode      }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Logical assumption   Open world assumption (OWA) maintains a           Closed world assumption (CWA) maintains data consistency}
\par\plain {\f0\fs24\b0\i0                      semantic under-specification                      and query performance}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Logic                Description logic                                 First-order logic}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Source of truth      Reality                                           Meta-model}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Focus                Explanatory & understanding                       Constructive & realisation  }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Type of Typing       \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93descriptive typing\u8221\'94[^DT], i.e., membership of    \u8220\'93Nominal typing\u8221\'94\\footref\{fn:kuhne\}, explicit typing                                                      }
\par\plain {\f0\fs24\b0\i0                      an instance to type `T` is only dependent on      relationships between individuals and their types: names  }
\par\plain {\f0\fs24\b0\i0                      whether or not it has the required properties:    are significant and subtyping is explicitly declared. }
\par\plain {\f0\fs24\b0\i0                      If it walks like a duck, talks like a duck and    Intensions are implicit by name, extensions are  }
\par\plain {\f0\fs24\b0\i0                      swims like a duck, it \\emph\{is\} a duck. An        explicit enumerations of type incarnation. }
\par\plain {\f0\fs24\b0\i0                      explicit equivalence relation is established }
\par\plain {\f0\fs24\b0\i0                      between extension and intension.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Constrain purpose    Axioms constrain the possible interpretations,    Constraints enforce integrity of the data, and are used }
\par\plain {\f0\fs24\b0\i0                      and scope the automated reasoning.                to optimise processing performance}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Objects of interest  The categories of being which are assumed to      It is the goal of the information level to define one }
\par\plain {\f0\fs24\b0\i0                      exist in a certain domain independently of        among the many possible structures of propositions }
\par\plain {\f0\fs24\b0\i0                      particular information demands                    (information) about a domain and to characterise a }
\par\plain {\f0\fs24\b0\i0                                                                        certain information demand.}
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 --------------------------------------------------------------------------------------------------------------------------------}
\par\pard\plain \ri-17053\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 Table: The main differences between an ontology and a (forward-looking) model. \\label\{tab:onto-versus-model\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The term \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93model\u8221\'94 can have two distinct meanings to different authors in the field. Notably for the system architects, the term is used to refer to a specification, the schema, of the data that it allows. In contrast, and in a more formal mathematical reading, the term is used to refer to the data itself, the theories that are possible }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 As explained by [@A\loch\af0\hich\af0\dbch\af0\uc1\u223\'DFmann2006]: "Specification models focus on the specification, control, and generation of systems; ontologies focus on description and conceptualization (conceptual modelling) of things." We similarly consider ontologies a necessary component to formally represent the DoI and faithfully describe the domain of interest. We concluded in \\cref\{a-semantic-monolith\} that the DoI should be represented by a data model and data processing model pair, which use one single model as reference to both models in the semantic monolith. Since both models will find their truth in reality, we consider them backward-looking and, hence, both should be represented as (domain) ontologies. In conclusion, the concern on semantics in software is consolidated by the use of ontologies which specify the ASM, whereas forward looking models collectively consolidate the agent\u8217\'92s other static and dynamic concerns.   }
\par\plain {\f0\fs24\b0\i0   }
\par\plain {\f0\fs24\b0\i0 This leaves the question of the formal relationships that exist within the ASM between the semantic and pragmatic models, with their ontological commitment and with their reference model. It furthermore leaves the question about the relationship between the ASM and the other (forward-looking) models of the agent. This particular notion on architectural consistency will be addressed in the next section.}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 <!-- page additions -->}
\par\plain {\f0\fs24\b0\i0 [def:ontoMDA]: src\\images\\OntosInMDE.png \{#fig:OntosInMDE  width=80%\}}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ltrch\loch {\f0\fs24\b0\i0 [^DT]: Coined by \\cite\{Kuhne2018\}\\label\{fn:kuhne\}}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0}