{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24 *Background*: Many architectural principles exist in order to improve the efficacy and quality of software. Several software abilities, interoperability in particular, has been instrumental in the emergence of a wide variety of contemporary internet applications, e.g., IoT, Big Data and networked business operations. Never before, data were so ubiquitous. Never before, a managed access to external, non-native data has been so easy. Unfortunately, *using* that same external, non-native data shows extremely difficult: For a data consuming application, interpreting and using external data requires to adopt a sufficiently similar world view as the data provider assumed. This semantic part of interoperability represents a bleeding edge in software development, resulting in flat application failures or, more disconcertingly, in seemingly correct but quite invalid data analysis and use, and their correction always require a significant time and effort that shows a substantial impediment towards business operations and agility. Although technologies such as the Semantic Web and ontologies are available, and despite the principles and practices of the model driven architecture paradigm, no architectural guidance to semantic interoperability exists, neither in terms of architectural principles nor as design practices.\line *Objective*: The objective of this study is to identify and define the fundamental guidance towards semantic interoperability in contemporary architectural paradigms. \line *Method*: We apply a design science approach and adopt their Information Systems Research Framework. We first identify shortcomings in architectural paradigms to account for semantic interoperability and formulate these as concerns, then develop architectural principles that follow from these concerns, and subsequently apply those to arrive at an architecture that prepares software with a capability for semantic interoperability. \line *Results*: Based on fundamentals of software behaviour, we conclude that semantics in computer science can be considered the result of a reciprocity between data and the software code that operates on them. We analyze that the major shortcomings in architectural paradigms to account for semantic interoperability, is laid in their negligence of semiotic fundamentals and, particularly, the absence of an explicit ontological commitment that stands at the root of semantics and, hence, semantic interoperability. We show that corrective measures introduce three architectural principles in order to achieve loose coupling at the semantic level. We subsequently infer ***X*** architectural concerns, and suggest a means to their consolidation in view-based and model-driven architectural paradigms. \line *Conclusion*: We propose architectural guidelines that provide software applications with the capability for semantic interoperability, without devaluation on existing software qualities or architectural concerns.}}