{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 ISO42010:2011 *Systems and software engineering \hich\f0 \emdash \loch\f0  Architecture description* [@ISO420102011] acknowledges that the architecture of a system needs to be described from multiple perspectives, and that these perspectives are not independent of each other. It defines an Architecture -:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 * *View*: \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93the description of the architecture of the system of interest from the perspective of one or more stakeholders to address specific concerns\u8221\'94; }
\par\plain {\f0\fs24\b0\i0 * *Viewpoint*: \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93a set of conventions for constructing, interpreting, using and analysing one type of Architecture View\u8221\'94. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 An architecture view is therefore governed by its viewpoint in terms of model kind, language and notation, as well as method.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The standard inherits many concepts from system thinking, especially that a system is made of components in interactions, and that the complete system cannot be understood only by understanding each component independently [@Bertalanffy1976]. It also borrows from the discipline of complexity management and leverages modelling artifacts as first class citizens of the architecture description. This approach in addressing the inherent complexity of today\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s socio-technical systems is opposed to analytical methods (such as functional decomposition), and natively integrates principles such as separation of concerns (views) and abstraction. Modelling a system by multiple views is therefore seen as a strong enabler for designing system architecture: the concerns of the many stakeholders are addressed, from various interdependent perspectives, including the technical concerns in the form of the quality attributes [@Zeist1996;@VanZeist1996;@ISO-IEC-SC72011]. This approach was already in use before the standard, and we consider it a generalisation of well-known approaches in software analysis and design, e.g., the 4+1 views [@Kruchten1995], and of approaches dedicated to specific domains, e.g., the conceptual, logical and technical views on data models.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The standard prescribes that multiple perspectives on the system are needed, but does not prescribe what concerns to address. Designed to support all paradigms it leaves the identification of the viewpoints and interdependence rules to the specific architecture framework and architecture description language (ADL). It prescribes that each architecture view is governed by its governing viewpoint, but does not prescribe how an architecture view should be modelled, except that it should follow the conventions of its governing viewpoint. So it can be considered a general framework for architecture description.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 ArchiMate is an ADL based on the predecessor of ISO42010 (IEEE-1471:2000), and became a technical standard from The Open Group in 2008. The structure of the language is . It prescribes three dimensions along which a system should be described [@Jonkers2017]: the *active*, the *behaviour* and the *passive* structures. The active structure is made of the structural elements of the system capable of performing activity - the subjects of activity. The behaviour is performed by the active structure (process, function, service). The passive structure is made of the objects on which behaviour is performed, the objects of activity. The definition of each aspect includes their interdependency: active structural elements are assigned to behavioural elements, behavioural elements act on passive structural elements. ArchiMate supports the description of a system according to those three dimensions, and the language provides constructs to conceptualise elements of each. Moreover, those three dimensions can be considered from multiple perspectives (business, application, technology), whereas their dependencies are managed by applying the layering patterns. The ArchiMate language thus supports the description of a system from multiple viewpoints and introduces a mechanism to define those viewpoints, and conforms to the standard of architecture description ISO42010.}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}