{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}{\f2\fmodern\fcharset0\fprq2 CourierNewPS-BoldMT;}{\f3\fmodern\fcharset0\fprq2 monospace;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0\cf1 Multiple signs (semiotic triangles) can be linked together in two ways [Peirce in: @Sowa:2000di], vertically or horizontally. By stacking them together (\\cref\{fig:linked-triangles\}(a)) a conceptualisation is made of \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93representing an entity\u8221\'94: the original concept of a [|cat] named \\token\{yojo\} (\\cref\{fig:semiotic-triangles\}(c)) is being conceptualised as the concept of a [|cat named \u8220\'93Yojo\u8221\'94] and represented by \\token\{cat:yojo\}. Eco [@Eco1976] uses the term *unlimited semeiosis* for the succession of stacking signs that emerge from that, *ad infinitum*. We consider unlimited semeiosis as addressing a dimension of comprehension about abstraction, and more specifically, of generalisation and classification.}
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0\cf1 ![Linking triadic models together; (a) vertically stacking the signs addresses abstractions, i.e., generalisations and classification, (b) horizontal connections address representational meta-levels.][def:linkedtriangles]}
\par\pard\plain \ri-16872\ltrch\loch \f0\fs24\b0\i0\cf1
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0\cf1 Linking the triangles horizontally results in different representational meta-levels, depicted in \\cref\{fig:linked-triangles\}(b): From right to left, the characters \\token\{Y\}, \\token\{o\}, \\token\{j\} and \\token\{o\} are conceptualised as a single [|word] and represented as \\token\{yojo\}, which is conceptualised as a [|name] and represented as \\token\{name:Yojo\}, which is conceptualised as an [|identifier] that might be represented as \\token\{Id=\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92name:Yojo\u8217\'92\}. Mathematically, this can be described as a mapping function between two formal language systems, $f : \\Sigma_1 \\to \\Sigma_2$, where $\\Sigma = (\\Lambda, G)$, $\\Lambda$ is an alphabet, and grammar $G$ produces valid theories from the elements in $\\Lambda$. The function $f$ maps a more detailed formal language onto a more abstract formal language.     }
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 We continue the denotational tradition in logic: use single letters as opposed to full descriptive terms, e.g., \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93`c`\u8221\'94 instead of \u8220\'93my car\u8221\'94; apply lower case letters to denote particulars and capital letters to denote predicates; and refer to specific particulars with letters in the first part of the alphabet (\u8221\'94`a`\u8221\'94, \u8220\'93`b`\u8221\'94, \u8220\'93`c`\u8221\'94, ...) whilst (..., \u8221\'94`x`\u8221\'94, \u8220\'93`y`\u8221\'94, \u8220\'93`z`\u8221\'94) refer to variables. For example, if particular \u8220\'93`c`\u8221\'94 refers to }{\f1\fs24\b0\i1 my car}{\f0\fs24\b0\i0  and the (unary) predicate \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93`P`\u8221\'94 denotes }{\f1\fs24\b0\i1 being a vehicle}{\f0\fs24\b0\i0 , then `P(c)` represents the state of affairs that }{\f1\fs24\b0\i1 my car is a vehicle}{\f0\fs24\b0\i0 . Similarly, `M(b,a)`, a binary predicate \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93`M`\u8221\'94 (}{\f1\fs24\b0\i1 motherhood}{\f0\fs24\b0\i0 ) with individuals `b` and `a`, represents the state of affairs that \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93`b`\u8221\'94 is *the mother* of *the child* \u8220\'93`a`\u8221\'94. Furthermore, the relation $\\intn$ from tokens to concepts is one of interpretation, and, in reversed direction, of representation. It therefore holds that $c \\Leftrightarrow \\intn(\\texttt\{c\})$; in text, the *particular* (token) \u8220\'93`c`\u8221\'94 is interpreted as the *individual* (concept) $c$ that is an abstraction of my car. Similarly, $\\concept\{P\} \\Leftrightarrow \\intn(\\texttt\{P\})$, and $\\intn(\\texttt\{P(c)\}) \\Leftrightarrow c \\in \\concept\{P\}$, viz. my car belongs to the category of vehicles. Likewise, `M(b,a)` interprets as $\\intn(\\texttt\{M(b,a)\}) \\Leftrightarrow \\intn(\\texttt\{(b,a)\}) \\in \\intn(\\texttt\{M\}) \\Leftrightarrow (b,a) \\in \\concept\{M\}$, where $\\concept\{M\}$ denotes a set of binary pairs $(\\cdot, \\cdot)$, with $\\concept\{M\} \\subset \\concept\{R\}$ and $\\concept\{R\}$ the set of all $n$-ary relationships that we consider to exist over individuals from the DoI itself, denoted $\\concept\{D\}$, and relationships over $\\concept\{D\}$.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 It is important to differentiate between the }{\f1\fs24\b0\i1 ontological}{\f0\fs24\b0\i0  relationships such as \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93motherhood\u8221\'94 or \u8220\'93being a vehicle\u8221\'94 defined above, and the }{\f1\fs24\b0\i1 modelling}{\f0\fs24\b0\i0  relationships such as generalisation, instantiation and more. These are defined as follows:}
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0  }
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Classification}{\f0\fs24\b0\i0 : This relationship considers one or more criteria which collectively specify a particular characterisation of entities in the DoI. These criteria form the intensional definition that provides for a mechanism to judge whether a particular belongs to a universal (type). Since the principle of application is based on rules that specify the essential property or properties that are common to instances that belong to a universal, classification provides the principle of application. Mathematically: $\\texttt\{P(x)\} \\Rightarrow  x \\in \\concept\{P\}$, with $\\concept\{P\} = \\intn(\\texttt\{P\}), x = \\intn(\\texttt\{x\})$. For example, consider the (unary) predicate \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93`P`\u8221\'94 and assume \u8220\'93`P`\u8221\'94 denotes *being a car*. Then we write `P(c)` to classify individual $\\intn(\\texttt\{c\})$ as member of the set $\\concept\{P\}$, where the extension of $\\concept\{P\}}{\f3\fs24\b0\i0 $ lists all individual cars}{\f0\fs24\b0\i0 ;}
\par\plain {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Instantiation}{\f0\fs24\b0\i0 : Also denoted as *instance-of*, *is-a* or *type-instance* relation, instantiation is in its genuine form depicted in \\cref\{fig:}{\f0\fs24\b0\i0\cf1 onto-square-and-sextet}{\f0\fs24\b0\i0 \}. In this ontological context, the individual entails a universal entity that supplies the principle of identity for its instances. The principle of identification is based on rules that define the intrinsic treats that an instance exemplifies when it exists, how that instance is unique and distinct from other instances, and how it should subsequently be identified and referred to in different use contexts. Since the inverse of instantiation maps individuals to a single set, it is very tempting to equate instantiation as the inverse of classification. This would be incorrect, since an individual can be classified in many distinct categories while there is only one ultimate universal that provides the principle of identity to its instances. This notion is highly relevant since it puts the instantiation as a 1:1 relation in between universals and particulars, only, and determines its non-transitivity. Formulated as a set and its set members, this implies that the instantiation relation relates a set with set member that are individuals only, as opposed to subclasses: `x :: U` $\\Rightarrow \\; \\intn(\\texttt\{x\}) \\in \\concept\{U\} \\, \\land \\, \\intn(\\texttt\{x\}) \\nsubseteq \\concept\{U\}$, where `x :: U` denotes the instantiation relation between (individual) `x` and (universal) `U`, and the set $\\concept\{U\} = \\intn(\\texttt\{U\})$ can be defined either intensionally or extensionally;    }
\par\plain {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Generalisation}{\f0\fs24\b0\i0 : Consider two sets of individuals, $\\concept\{A\}$ and $\\concept\{B\}$. The set $\\concept\{B\}$ is considered a generalisation for set $\\concept\{A\}$ (or $\\concept\{A\}$ a specialisation of $\\concept\{B\}$) if and only if all elements that belong to set $\\concept\{A\}$ also belong to set $\\concept\{B\}$: $\\concept\{A\} \\subseteq \\concept\{B\} \\Rightarrow \\forall x \\in \\concept\{A\}: x \\in \\concept\{B\}$. Where classification/instantiation relates individuals (particulars) to their type (universals), generalisation/specialisation relates types (universals) to types (universals). In linguistic terms `A` $\\sqsubseteq$ `B` since $\\intn(\\texttt\{A\} \\sqsubseteq \\texttt\{B\}) \\Leftrightarrow \\intn(\\texttt\{A\}) \\, \\intn(\\sqsubseteq) \\, \\intn(\\texttt\{B\}) \\, \\Leftrightarrow \\concept\{A\} \\subseteq \\concept\{B\}$, also denoted the }{\f1\fs24\b0\i1 subsumption}{\f0\fs24\b0\i0  relation. The generalisation, or more precisely its inverse, the specialisation relation provides for a partitioning rule and has nothing to do with the principles of identity or application;}
\par\plain {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Type-of}{\f0\fs24\b0\i0 : Where in every meta-modelling methods, e.g., OMG\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s MDA, it is typical that a named class at the M1 model, e.g., a \u8220\'93car\u8221\'94 class, is an *instance-of* a class at the M2 meta-model, this should be considered incorrect use of the rules of strict meta-modelling [@Henderson-Sellers2012; Ch. 4., Fig. 4.4]: an instance of a class is always an object, whereas a specialisation of a class is always a (sub)class; hence, the \u8220\'93car\u8221\'94 class at the M1-level should be a *specialisation* of the M2-class, which is illegal as well since specialisation/generalisation is only allowed within one level and not between meta-levels. }
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Conformance}{\f0\fs24\b0\i0 : Where the previous relationships exist between elements of one or two models, conformance represents a type of relationship that expresses a relation between two adjacent levels, e.g., a model and its meta-model. Naturally, such relation cannot exist without taking into account the relations between the elements from the model and those from the meta-model. Since a (meta-)model ($M$)$M$ is a compound of tokens $e_i$, mathematically, that means $\\forall e_i \\in M \\; \\exists f \\in MM : T(e_i) = f$, with $T(\\cdot)$ the type-of relationship;}
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 Use of the modelling language is threefold and denoted Level A, B and C [@Eriksson2013a]:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Level A}{\f0\fs24\b0\i0  is explained as the definition of the constructs of the modelling language. We consider this the ontological commitment of the language as described in \\cref\{ontological-commitment\};}
\par\plain {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Level B}{\f0\fs24\b0\i0  uses these language constructs to create the types of things that the domain of application requires to differentiate between. These types refer to the intensional definition of a set, the universals that provide the principle of application that applies;}
\par\plain {\f0\fs24\b0\i0 * }{\f2\fs24\b1\i0 Level C}{\f0\fs24\b0\i0  represents the levels of the individuals, the instances that exist in reality and for which we need a principle of identity to differentiate between. Since these things and their properties exist independently from how we choose to label them with a token, this level is about the tokens that we apply to refer to a unique entity out there and, consequently, refers to the extensional definition of the set.            }}