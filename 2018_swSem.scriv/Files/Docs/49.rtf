{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 The following concerns relate to an explicit role of semantic in software\line }
\par\plain {\f0\fs24\b0\i0 1. No universal semantics can exist. Different stakeholders will maintain different world views, each of them equally valid. Therefore, consider semantic heterogeneity a feature as opposed to a bug and thus design for semantic heterogeneity;\line 2. Each software component is about a particular application domain. As already indicated in the previous point, each software component will maintain a unique view on its application domain. We need to make that unique view explicit as opposed to leave it as implicit characteristic of the software component. As Quine notes: \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93We look to [...] ontology not in order to know *what there is*, but in order to know what a given remark or doctrine, ours or someone else\u8217\'92s, *says* there is\u8221\'94 [@Quine:1953er]. Thus, prepare for sIOP by specifying your particular world view explicitly, upfront, as Conceptual Model (CM), i.e., local ontology.\line 1. Volume \endash  the size of the ontology and the amount of instances,\line 2. Velocity \endash  the speed at which data is generated,\line 3. Variety \endash  data from multiple domains,\line 4. Variability \endash  the change of characteristics of the data, which also causes a need to change the ontology \line 5. Evolution of knowledge and semantics}}