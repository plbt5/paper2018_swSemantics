{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 monospace;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0\cf1 The discipline of ***semiotics*** is the study of signs, reality and meaning. The meaning of a *token* (text, graphics) relates to what it denotes in reality (the *entity*), whilst this relation cannot be deferred from the shape, structure or other characteristics of the token itself due to its total arbitrariness. De Saussure used a dyadic model for the *semiotic sign*, that stressed that the token and the entity were as inseparable as the two sides of a piece of paper [@Saussure:1983ka]. This \loch\af0\hich\af0\dbch\af0\uc1\u8216\'91self-containment of the sign\u8217\'92 remains one of the major principles of semiotics. Constructing the semiotic sign from its distinct parts is called *semeiosis*. The token, in combination with their ability for semeiosis, provide humans with the tool to communicate. Meaning, then, emerges as a result of the semeiosis. In the remainder of this paper, with \u8220\'93sign\u8221\'94 we always mean the semiotic self-contained sign (not the token only).}
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0\cf1 Sanders Peirce [@Sowa:2000di] developed a triadic model (semiotic triangle) of the semiotic sign: representamen (token), object (entity), and interpretant (mental and, hence, individual sense making) (\\cref\{fig:semiotic-triangles\}(a)). The semiotic triangle was used and modified by many (e.g. [@Ullmann:1979sL;@Ogden1989;@Kuhn2009]). We introduce our modifications (\\cref\{fig:semiotic-triangles\}(b)) that focus on naming conventions in IT architectures and its subjective nature by placing the human actor in the middle [@Falkenberg1998].}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0\cf1
\par\plain {\f0\fs24\b0\i0\cf1 ![The triadic model of the semiotic sign, according to Peirce (a), and modified by us (b). Example (c) shows the concept of a cat named \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93Yojo\u8221\'94][def:semtriangles]}
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0\cf1 We use *entity*, due to the ambiguity of *object* in IT. We consider an entity to stand for an individual thing or event, for a group of entities, a category, a relation between entities, or a property of an entity. We refer to *germane entities* in distinction to many other irrelevant entities in reality. We refer to the *interpretant* component as the *conceptualisation*, to underline individual conceptualisation that is formed during requirements analysis and conceptual modeling, and typographically denote its elements as [|concept]. We prefer *token* over *representamen*, and consider it both an atomic element, and a particular composition of atomic elements, typographically denoted as $\\token\{token\}$. We include denotations for the edges that are connected to the conceptualisation component and use names that underline the individual and mental nature of the sense making. These names are directional and must be read as the transformation that takes place in that direction: an entity is *abstracted* ($\\alpha$) into a conceptualisation; a conceptualisation is *represented* ($\\delta$) by a token, a token *represents* ($\\mu$) an entity. Emphasising that $\\mu = \\delta }{\f1\fs24\b0\i0 \\circ}{\f0\fs24\b0\i0\cf1  \\alpha$  clarifies the phrase in modelling \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93to never confuse the model for the real thing\u8221\'94. We add the causal characteristics that the edges represent [@Ogden1989], as *adequacy* and *correctness*. The connection between the token and the entity, *trueness*, is a dashed line: it exists indirectly only through the conceptualisation and not directly. This trueness characteristic is imputed, since it is dependent on the choices made on abstraction and representation. \\Cref\{fig:semiotic-triangles\}(c) shows a well-known sign example: when we talk about $\\token\{Yojo\}$, our cognition interprets it as our [|cat]. This foundation on semantics adopts the *code model* and assumes that (i) the code (token) to encode/decode is shared, and (ii) the encoding and decoding components can associate the thought with the tokens. }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0\cf1
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 ***Pragmatics*** studies the way context, pre-existing knowledge, and intent contribute to meaning. Where grammars are capable of generating linguistically ingenious and complex strings of tokens that represent meaning, pragmatics suggests that comprehension involves more than a decoding grammar, rejecting the code model [@Sperber1995]. The *inferential model* describes comprehension as an inference process that starts from a set of premises and results in a set of conclusions that are warranted by them [@Grice:1991BT]. Grice thus discerns the latter *pragmatic meaning* from the former *semantic meaning*, providing the insight that both models might be different but not incompatible and both have their place in semantics. Where semantic meaning points to \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93what is said\u8221\'94, we understand pragmatic meaning as \u8220\'93how it connects with our reference framework\u8221\'94. With *reference framework* we refer to \u8220\'93a set of ideas or facts that a person accepts and that influences the person\u8217\'92s behaviour, opinions, or decisions\u8221\'94[^FoR]. So, the pragmatic meaning has the capability to position the semantic meaning in the specific purpose of the application for its appropriate use. For example, the semantic meaning of a heartbeat is about the number of beats per minute (BPM), e.g., \\token\{128\}. Unfortunately, knowing \\token\{128 BPM\} is insufficient for conclusions, as this number can refer to different contexts (health of elderly or new-borns, performance potential in sports).}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We consider the distinction between the code and inferential models essential for software semantics:  }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdef\}[Semantic meaning]\\label\{def:semantic-meaning\}}
\par\plain {\f0\fs24\b0\i0 The semantic meaning refers to the explanation by the code model on how tokens refer to entities in reality, particularly to the representation that is given to a germane entity.}
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain {\f0\fs24\b0\i0 >The token is connected to a concept from the conceptualisation by means of its underlying formal semantics. We may use *semantic meaning* (human semeiosis) and *data* (software artefact) interchangeably, but they are not synonymous. We consider the data the vehicle carrying the semantic meaning.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 \\begin\{mmdef\}[Pragmatic meaning]\\label\{def:pragmatic-meaning\}}
\par\plain {\f0\fs24\b0\i0 The pragmatic meaning refers to the explanation by the inferential model that comprehension refers to a process which infers the consequences of the semantic meaning. Pragmatic meaning constitutes inference patterns and constraints which augment our frame of reference, i.e., context, background knowledge and intent, from an initial (set of) fact(s), its premises. }
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain {\f0\fs24\b0\i0 >The pragmatic meaning positions the semantic meaning in the specific purpose of the application. The expressiveness of the reference framework is bound by power of the underlying logic, whereas its conclusiveness is determined by the capability of the formulated inference rules. We will use the terms *pragmatic meaning* (human comprehension) and *data processing (code)* (software artefact) interchangeably, but these are not synonymous. We consider the data processing code the vehicle carrying the pragmatic meaning.}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdef\}[Semantics]\\label\{def:semantics\}}
\par\plain {\f0\fs24\b0\i0 Semantics denotes the indirect relationship that exists between the token and the entity and how we comprehend that relationship against our own frame of reference. The code model explains why this relationship is an indirect one and why it demands the self-containment of the sign. The inferential model explains how the sign warrants our subjective comprehension by connecting it to our individual context of application, knowledge and intent. }
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 These semiotic and pragmatic principles are fundamental to engineering semantics into software. This leads to the semiotic-pragmatic design principle, \\cref\{dp:semiotic-pragmatic\}. }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 We think the impact of the pragmatic meaning on semantics is often neglected in software architectures. We observe that whenever the pragmatic meaning is addressed it is considered in terms of functional requirements, business rules or process models - unequivocally belonging to the behavioural perspective of software agents. One particular form of distinction between semantic meaning and pragmatic meaning is context-awareness: although it does recognise that the application behaviour changes per context, it neglects context to be a causal consequence of the pragmatic meaning, and not an independent environmental notion. We conclude that pragmatic meaning is often disguised as behaviour and that distinction between comprehension and behavioural parts of software agents is needed. We understand comprehension as operations deriving consequences, such as inferencing or applying constraints; we understand behaviour as actions, operations that realise the emergence of a certain effect or achieve a predefined goal. We consider behaviour under control of the application model of the agent and comprehension under control of the Domain Model. This leads to \\cref\{dp:comprehension-behaviour\}: Separate comprehension from behaviour.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We present the following heuristic to separate comprehension from }{\field{\*\fldinst HYPERLINK "scrivcmt://32F674BD-3012-425D-99C4-3ADE4E9F87E6"}{\fldrslt\f0\fs24\b0\i0 behaviour}}{\f0\fs24\b0\i0 , as follows:}
\par\plain {\f0\fs24\b0\i0 \\begin\{mmh\}\\label\{heur:how-to-discern\}}
\par\plain {\f0\fs24\b0\i0 Comprehension and behaviour refer to processes that fulfil distinct purposes:}
\par\plain {\f0\fs24\b0\i0   \\begin\{description\}}
\par\pard\plain \li17\fi-8\ltrch\loch {\f0\fs24\b0\i0     \\item[Comprehension processes] create data (events, states, or values alike) from input data, (implicit) background knowledge, domain context and agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s beliefs in order to influence the agent\u8217\'92s behaviour or decisions;}
\par\plain {\f0\fs24\b0\i0     \\item[Behaviour processes] produce output that is observable by the user.}
\par\plain {\f0\fs24\b0\i0   \\end\{description\}  }
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 \\end\{mmh\} }
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0\cf1 <!-- page additions -->}
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 [^FoR]: Cambridge Dictionary, https://dictionary.cambridge.org/dictionary/english/frame-of-reference, accessed Feb 2019}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0\cf1 [def:semtriangles]: src\\images\\SemioticTriangles.png \{#fig:semiotic-triangles width=90%\}}
\par\pard\plain \ri-10760\ltrch\loch \f0\fs24\b0\i0\cf1}