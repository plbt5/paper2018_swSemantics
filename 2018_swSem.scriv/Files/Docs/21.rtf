{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 Abstracting semantics from a tacit, solidified software implication into a tangible, computational and distinct artifact provides us with the potential to connect to it. We consider this a fundamental demand for making comparisons, e.g., with the semantic artifact of any other software agent in order to achieve semantic interoperability, or with a changed context in reality in order to achieve semantic evolution, including a clear indication of the software component that requires change to cope with it. This could imply just another day in the office, because for ICT architects and software engineers the technique of abstracting goes hand in hand with formulating a standard that solidifies the abstraction, integrates it at the right infrastructural level and provides for its access down in the infrastructure where we just positioned it. }{\f1\fs24\b0\i1 Quod non est}{\f0\fs24\b0\i0  for semantics, at least not that simple. \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93The successful standardisation of protocols made us believe that we should also }{\f1\fs24\b0\i1 standardise meaning}{\f0\fs24\b0\i0  on the Web. This is a fundamental }{\f1\fs24\b0\i1 misconception}{\f0\fs24\b0\i0 .\loch\af0\hich\af0\dbch\af0\uc1\u8221\'94 [@Janowicz:2013ui]. Because, this is the first time in the history of ICT that its discipline, viz. we, are not speaking about a concern that belongs to the realm of technology. Semantics does not belong to our own realm. Consequently, we cannot control it, hence the existence of semantic heterogeneity. This becomes very clear if we realise that semantics is a representation of some part of the world, viewed from a particular perspective. And more importantly, that it is just one particular perspective out of many equally legitimate ones. Some examples are given in \\cref\{tab:perspectives\}.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 -------------------------------------------------------------------------------------------------------------------}
\par\plain {\f0\fs24\b0\i0 Reality to refer to          Perspective #1      Perspective #2       Perspective #3       ...   Perspective #n              }
\par\plain {\f0\fs24\b0\i0 ---------------------------- ------------------- -------------------- ------------------- ------ ------------------}
\par\plain {\f0\fs24\b0\i0 A wave is                    an }{\f1\fs24\b0\i1 object}{\f0\fs24\b0\i0  that      an }{\f1\fs24\b0\i1 event}{\f0\fs24\b0\i0  that        a subsequent         ...   a }{\f1\fs24\b0\i1 relation}{\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0                              I can point at      happens in time      sequel of }{\f1\fs24\b0\i1 phases}{\f0\fs24\b0\i0            between water,}
\par\plain {\f0\fs24\b0\i0                                                                                                  current, wind and}
\par\plain {\f0\fs24\b0\i0                                                                                                  the seabed}
\par\plain {\f0\fs24\b0\i0      }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The terrorist attack at 9/11 1, the number       2, the number        4, the number        ...   2996, the }
\par\plain {\f0\fs24\b0\i0 counts how many events?      of involved         of collapsed         of involved                number of}
\par\plain {\f0\fs24\b0\i0                              terrorist groups    towers               aircraft                   casualties [^1]}
\par\plain {\f0\fs24\b0\i0                  }
\par\plain {\f0\fs24\b0\i0 -------------------------------------------------------------------------------------------------------------------}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0    : Semantics follow many alternative but equally legitimate points of view on reality, therefore, no single one true semantics exist. Hence, semantic heterogeneity is a feature that should be preserved, as opposed to a bug that should be sought to correct. \\label\{tab:perspectives\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We defend that software semantics should become explicitly specified }{\f0\fs24\b0\i0\cf1 \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93(...) not in order to know *what there is*, but in order to know what a given remark or doctrine, ours or someone else\u8217\'92s, *says* there is\u8221\'94 [@Quine:1953er]. }{\f0\fs24\b0\i0 Current viewpoints on semantics defy semantic heterogeneity and strive for one single agreed convention, viz. a definition of how the syntactic structure of the messages shall be semantically interpreted. This leads to semantics that solidifies in software as implicit operations on data. Since no one single valid perspective exists, neither does a standard on its representation. And without a generic applicable standard, no abstraction can exist, and therefore no infrastructural semantic services can emerge. Once semantics become explicit and computational, semantic heterogeneity can become a feature as opposed to a bug (coined by [@Janowicz:2013ui]), leading to higher semantic quality and accuracy, as well as reusability, reliability, shareability, portability and (as we can see in part 2) interoperability of these semantics. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The main idea of this paper is to standardise semantics at the meta-level as opposed to the semantics themselves. Our contribution to the consolidation of semantics in contemporary architectures are three architectural concerns on semantics that apply necessarily, one set of supporting principles, and an additional ISO42010 Viewpoint and View, as follows:     }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 * }{\f1\fs24\b0\i1 Semiotic and pragmatic concerns}{\f0\fs24\b0\i0 : Based on the disciplines of semiotics and pragmatics, we explain why semantics cannot exist in software and why we should focus on the reciprocity between data and the data processing code of software instead. We argument that this reciprocity will always result in a semantic monolith, and that the architecture shall address the size of what should be considered its atomic unity: the larger, the easier to build and maintain; the smaller, the wider its applicability in different contexts (\\cref\{semantics-in-software\});}
\par\plain {\f0\fs24\b0\i0 * }{\f1\fs24\b0\i1 Domain appropriateness concerns}{\f0\fs24\b0\i0 : Representing semantics will result in a model. Based on formal semantics, modelling and modelling languages, we argue that the application of ontologies and ontological commitment are fundamental to represent reality faithfully in a model (\\cref\{explicit-semantics\});}
\par\plain {\f0\fs24\b0\i0 * A}{\f1\fs24\b0\i1 rchitectural consistency concerns}{\f0\fs24\b0\i0 : No matter how accurately reality have been modelled, without its valid integration in the architecture, semantics cannot be applied in order to direct the functionality, scope and validity of the other models. We show how semantics can be related to the system models in a consistent and valid way (\\cref\{architectural-consistency\});}
\par\plain {\f0\fs24\b0\i0 * }{\f1\fs24\b0\i1 ISO42010 Architecture Viewpoint}{\f0\fs24\b0\i0 : We verify the applicability of the above concerns and principles by formulating their architectural consequences as a specific ISO42010 Semantic Viewpoint, and we show their proper position in the total architecture as corresponding Semantic View. As ISO42010 is considered a set of best practises for describing architectures and being used with architecture frameworks such as MoDAF, TOGAF, DoDAF, RM-ODP and more, we consider this Semantic Viewpoint and View a proper consolidation of semantics for contemporary architectural paradigms (\\cref\{iso42010-viewpoint-on-semantics\}).}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Based on these contributions we defend that software semantics essentially denote the in software coagulated reciprocity between data and the data processing code. We further defend that one single semantic frame of reference can be used as anchor to ground the semantics of the other architectural models. Furthermore, re-usability, reliability, shareability, portability and interoperability are system engineering benefits that result from a separate semantic artifact. We introduce each of the 5 subjects above with a short summary of the related foundational theory where appropriate, and will conclude this first paper with a discussion on related work (\\cref\{related-work\}) and a discussion, including suggestions for future work (\\cref\{discussion-future-work\}).}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 <!-- Page additions -->}
\par\plain {\f0\fs24\b0\i0 [^1]: as mentioned by Wikipedia, https://en.wikipedia.org/wiki/Casualties_of_the_September_11_attacks, accessed Dec 13, 2018}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}