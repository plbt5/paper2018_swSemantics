{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 Before investigating the kind of services that are required from the Domain Model, we first consider that this must be done in accordance to the principle of *transparency*. In its classical interpretation this principle enforces that components remains agnostic to }{\f1\fs24\b0\i1 how}{\f0\fs24\b0\i0  the services provider achieves its services, as long as it can be used by the client components with *minimal dependency*. In its semantic orientation it is impossible to become independent from the code model that provides us with the semantic meaning of terms: we cannot abstain from using syntax and client components are deemed to use the syntax as provided by the code model and implemented by the Domain Model. Still, there is more to the domain model than syntax alone, i.e., functions that enforce semantic constraints to apply, or the formal tools of ontological analysis[^FTOA]. Client components only need to rely on the Domain Model to apply these, not *how* they are applied nor their intricate semantic consequences. Additionally, remaining independent from the inference model allows client components to remain agnostic about (i) whether data are sourcing from actual sensory or user input, or that these are inferred from knowledge, (ii) if and how a change in state of affairs is consequential for the clients own operation, as long as it\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s informed when consequences apply, and (iii) how the constraints that follow from, e.g., an ontological commitment, are enforced. In conclusion, the service provisioning by the Domain Model cannot remain fully transparent, but except for enforcing a particular syntax the principle of transparency can also be applied on the semantic level.   }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 What kind of services should the Domain Model provide to the System Model? To that end we consider three orthogonal facets of use. Firstly, the Domain Model is simply yet another database but one that maintains a representation on the domain\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s state of affairs. Secondly, the Domain Model is about domain knowledge that specifies and implements the dependencies in the DoA that the agent needs to consider. Thirdly, the Domain Model in itself is a generic knowledge base that is build on a particular logical foundation. For each facet we describe their characteristic services.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 \\begin\{description\}}
\par\plain {\f0\fs24\b0\i0   \\item[Database facet:] This facet needs to provide the basic CRUD services in order to control the data that represents the current state of affairs. The Creation service refers to \\emph\{Instantiation\}: The capability to add new individuals of a particular type. The Read service is about \\emph\{Retrieval\}: The capability to find the individuals or concepts that respond to the competency questions (see below). Regarding the \\emph\{Update\} and \\emph\{Delete\} services, it is necessary to consider the fact that changing one datum, due to the inferencing that applies, ripples through to other data. This yields for the instantiation service as well. Therefore, in addition to CRUD services the database facet needs to provide a service to specify the relation between CRUD services and the moment of inferencing.         }
\par\pard\plain \li17\fi-8\ql\ltrch\loch {\f0\fs24\b0\i0   \\item[Domain knowledge facet:] This facetis characterised by the capability to interrogate the Domain Model about the specifics of the state of affairs; here we suggest the application of \\emph\{competency questions (CQ\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s)\} \\cite\{Uschold1996, Uschold1996a, Gruninger1995, Ren2014\}. CQ\u8217\'92s represent for the Domain Model what requirements are for a piece of software: they collectively describe what we demand from the Domain Model, but since this demand is not about functionality but about knowledge, the term \u8220\'93competency\u8221\'94 is used instead. A competency question is about the DoA, formulated in terms of the DoI, for which the agent demands answer, e.g., \u8220\'93How many cats are in the garden?\u8221\'94 or \u8220\'93what toppings are available for an American Pizza?\u8221\'94. In addition to allow for query services that facilitate these domain specific competency questions in an ad-hoc fashion, it is necessary to extend these with a subscription mechanism to become informed of any changes in respect to particular aspects of the state of affairs.}
\par\plain {\f0\fs24\b0\i0   \\item[Generic knowledge facet:] This facet provides }{\field{\*\fldinst HYPERLINK "scrivcmt://7B71451F-AC21-4F38-A65A-F26C2011E270"}{\fldrslt\f0\fs24\b0\i0 information}}{\f0\fs24\b0\i0  that can be considered fundamental and therefore domain agnostic. Despite being dependent on the type of description logic that the Domain Model is based upon, at least it can provide the following services: }
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0   \\begin\{description\}}
\par\pard\plain \li17\fi-8\ltrch\loch {\f0\fs24\b0\i0     \\item[1. Representation:] The first and foremost capabilities is one of reference, viz. to represent a germane entity in the domain of application, uniquely over the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s models. This is not a new service and has already been addressed throughout the years in what have been named information models, schemata, or ER-diagrams. For the Domain Model\u8217\'92s interface this translates to exposing each and every concept that it knows about to the agent;}
\par\plain {\f0\fs24\b0\i0     \\item[2. Existence:] also known as satisfiability, the Domain Model should provide for a means to assess whether an individual or concept applies in the current state of affairs;}
\par\plain {\f0\fs24\b0\i0     \\item[3. Validity:] given an expressed statement, the Domain Model should provide for the ability to assess its validity in the current state of affairs, returning True, False or Unknown (an open world assumption is required to accurately represent state of affairs);}
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0     \\item[4. Equivalence:] given two concepts or individuals, assess whether these are equivalent to each other or not;}
\par\pard\plain \li17\fi-8\ql\ltrch\loch {\f0\fs24\b0\i0     \\item[5. Membership:] assert whether an individual belongs to a certain concept or whether a specific concept belongs to a more generic concept. Similarly, ask what individuals belong to a certain concept or what concepts belong to a more generic concept. }
\par\plain {\f0\fs24\b0\i0   \\end\{description\} }
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 \\end\{description\}}
\par\pard\plain \li17\fi-8\ri-17683\ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We formulate the following design principle to characterise the semantic services that apply. }
\par\pard\plain \ri-17683\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17683\ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdp\}[3-faceted services principle]\\label\{dp:three-faceted-services\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The Domain model provides services that address its database facet, domain knowledge facet and generic knowledge facet. \\\\}
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0 \\textbf\{Type of information:\} data, application \\\\}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Quality attributes:\} suitability, accuracy; understandability, explicitness; analysability, changeability, reusability; \\\\}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Rationale:\}}
\par\plain {\f0\fs24\b0\i0 \\begin\{enumerate\}}
\par\plain {\f0\fs24\b0\i0   \\item The Data Model represents the actual state of affairs, viz. data that reflects the state of the germane entities in the DoA;  }
\par\plain {\f0\fs24\b0\i0   \\item The Data Model implements the domain knowledge as rules and constraints that apply in the DoA;}
\par\pard\plain \ri-17683\ql\ltrch\loch {\f0\fs24\b0\i0   \\item The Data Model is build on top of logical foundations that apply for each domain.}
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0 \\end\{enumerate\}}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Implications:\}}
\par\plain {\f0\fs24\b0\i0 \\begin\{enumerate\}}
\par\pard\plain \ri-17683\ql\ltrch\loch {\f0\fs24\b0\i0   \\item CRUD services are the principled interface to access the current state of affairs in the DoA;}
\par\plain {\f0\fs24\b0\i0   \\item Due to the inference capabilities, the relationship between moment of inference and execution of CRUD services needs to be specified;  }
\par\plain {\f0\fs24\b0\i0   \\item Competency questions are the principled interface to access and assess the domain knowledge and state of affairs in the domain of application;}
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0   \\item Particular choices for its logical foundation will influence the domain agnostic service capabilities;}
\par\pard\plain \ri-17683\ql\ltrch\loch {\f0\fs24\b0\i0   \\item The interface of the Domain Model is the one and only location that specify the border between background (implicit) and foreground (explicit) knowledge.  }
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0 \\end\{enumerate\}  }
\par\plain {\f0\fs24\b0\i0 \\end\{mmdp\}}
\par\pard\plain \ri-17683\ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0  }
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 <!-- page additions -->}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17683\ql\ltrch\loch {\f0\fs24\b0\i0 [^FTOA]: The formal tools of ontological analysis include theories of Essence and Identity; Parts (Mereology); Unity and Plurality; Dependence; Composition and Constitution; Properties and Qualities; and Space and Time.}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ql\ltrch\loch \f0\fs24\b0\i0}