{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 Architecting a software system is an engineering process integrated within the software lifecycle processes, as described in the international standard ISO/IEC/IEEE 12207:2017^[https://www.iso.org/standard/43447.html]. The architect makes the main technical decisions about how the business goals will be realized with software elements. The architecture of the system, defined as the \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93fundamental concepts or properties of a system in its environment embodied in its elements, relationships, and in the principles of its design and evolution\u8221\'94, is an abstraction of the system under analysis. It is expressed via the architecture description, and used by architects and other stakeholders to understand the design decisions, trace them back to the goals, and as blueprint for planning and construction.}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 The drivers in the decision making process are the expected qualities of the system, specifically required or commonly accepted alike. Standard catalogues of those system qualities, e.g., the ISO2500 family of standard^[https://www.iso.org/standard/64764.html], do not only define a taxonomy of system qualities but also the processes to their specification and evaluation throughout the software life-cycle. The system qualities encompass the \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93-ilities\u8221\'94 of the system, [@Bass2013]. To meet them, architecture patterns are usually applied. The architecting process results in the architectural description of the system, \u8220\'93the fundamental structure of a software system\u8221\'94 exhibiting the targeted qualities.}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 Historically, the process of architecture design has been addressed in many ways, either surfing on the various waves in software engineering, or applying the paradigm of each software development method, addressing specific concerns at the detriment of others: functional decomposition, aspect-oriented programming and business process management approaches focus on system functions; use-case and scenario-driven approaches focus on their actors; data-driven approaches focuses on information management. }
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}