{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-BoldMT;}{\f2\fmodern\fcharset0\fprq1 Courier New,courier;}{\f3\fmodern\fcharset0\fprq2 monospace;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0 Contemporary software architectures apply many models that collectively represent the software agent. We concluded that the conceptual model is a backward-looking (descriptive) model. However, many if not all of the other models that are applied are forward-looking (system) models, prescribing the structure and behaviour of the software agent as such. Indeed, the collective data of the forward-looking (system) models represent the state of the software agent, whereas the collective data of the conceptual model represents the state of affairs in reality. Naturally, the state of affairs impacts the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s state, and vice versa. What does this mean for the relationship between the system models and the conceptual model? The objective is to }
\par\plain {\f0\fs24\b0\i0 achieve a separation of concerns between the backward-looking conceptual model and the forward-looking system models, minimising the mutual dependency between them. Well separated concerns result in higher degree of freedom about, e.g., reuse, independent development, maintenance and evolution, to name a few. Separation of concerns (SoC), in its classical sense, refers to decomposing a system into parts with as minimal functional overlap as possible. It thus separates functionality that is required to maintain a certain concern. In the semantic orientation, we conclude that the thing that should be separated from the system models is the conceptualisation. Then, and only then, the semantic model assures that the agent applies one single conceptualisation only, and, provides for consistency in answering any competency question [@Uschold1996;@Uschold1996a;@Gruninger1995;@Ren2014] that the agent might have about the DoI. Moreover, for a scenario where another conceptualisation should apply, another ASM can provide for such while it remains to provide for, probably different, answers to the same competency questions in a consistent manner nonetheless. Although the latter scenario is rather academic, it shows how semantics can be addressed as a single concern that has minimal dependency with the rest of the agent. }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdef\}[Semantic separation of concerns]\\label\{def:semantic-soc\}}
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0 Semantic separation of concerns abstracts the conceptualisation node of the semiotic triangle from the agent, such that the agent remains agnostic about how the answers to its competency questions about the domain of application are established while these answers are faithful to the state of affairs, reflect the intention of the conceptualisation of the domain of application and remain consistent with it.}
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The previous sections already showed several of the semantic concerns that are addressed by the ASM, including the decomposition of semantics in a semantic and a pragmatic meaning, maintaining the coherence between them, their grounding in an ontological commitment, and a formal interpretation in the conceptualisation as a means of semantic validation of facts. Indeed, that specific techniques are required to model an ASM, one that applies, e.g., (i) a backward-looking mode of operation, (ii) a specific modelling language, (iii) inferencing and entailment, and more, remains transparent for any models that use the ASM. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Another necessary aspect of separation of concerns is for the component to provide for a stable interface in order to hide its specific characteristics. For the ASM we identify the following main interface requirements:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 1. }{\f1\fs24\b1\i0 Representation}{\f0\fs24\b0\i0 : The first and foremost concern is one of reference, viz. how do we represent a germane entity in the domain of application, uniquely over the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s models? This is not a new service and has already been addressed throughout the years in what have been named information models, schemata, or ER-diagrams. For its interface this translates to exposing each and every concept that are addressed by the competency questions to the agent;}
\par\plain {\f0\fs24\b0\i0 2. }{\f1\fs24\b1\i0 Structuring}{\f0\fs24\b0\i0 : Given any concept, the ASM should provide for any other concept that relates to it, either the particular relation that applies, or any logical relation that holds, e.g., subsumption, or disjointness;}
\par\plain {\f0\fs24\b0\i0 3. }{\f1\fs24\b1\i0 Existence}{\f0\fs24\b0\i0 : also known as satisfiability, the ASM should provide for a means to assess whether a concept or relation has been instantiated by the current state of affairs;}
\par\plain {\f0\fs24\b0\i0 3. }{\f1\fs24\b1\i0 Validity}{\f0\fs24\b0\i0 : given an expressed statement, the ASM should provide for the ability to assess its validity in the current state of affairs, returning True, False or Unknown (the ASM assumes an open world);}
\par\plain {\f0\fs24\b0\i0 4. }{\f1\fs24\b1\i0 Equivalence}{\f0\fs24\b0\i0 : given two concepts or individuals, assess whether these are equivalent to each other or not;}
\par\plain {\f0\fs24\b0\i0 5. }{\f1\fs24\b1\i0 Membership}{\f0\fs24\b0\i0 : assert whether an individual is of a certain type or belongs to a certain concept;}
\par\plain {\f0\fs24\b0\i0 6. }{\f1\fs24\b1\i0 Retrieval}{\f0\fs24\b0\i0 : find the individuals or concepts that respond to the competency questions;}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We consider these the most important interface demands since these consolidate the semantic concerns. It might be useful to extent these capabilities with a subscription mechanism to become informed of any changes in respect to the particular aspect of the current state of affairs.          }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 We therefore conclude the need for maintaining the semantic SoC between the backward-looking ASM and the forward-looking system models. This is similar to maintaining the Normal Forms as applied in database engineering, but now in order to abstract semantic variations away by introducing explicit -ilities, viz. building consistency between the conceptual model and system models. We conclude furthermore that the relationship between the forward-looking system models and the ASM is constrained to one of *grounding*, defined as follows. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 \\begin\{mmdef\}[Model grounding]\\label\{def:model-grounding\}}
\par\plain {\f0\fs24\b0\i0 A forward-looking system model $\\token\{M\}_f$ is said to \\emph\{ground\} in a backward-looking model $\\token\{M\}_b$, denoted $\\Gamma(\\token\{M\}_f, \\token\{M\}_b)$ when:   }
\par\plain {\f0\fs24\b0\i0 \\begin\{subequations\}\\label\{eq:model-grounding\}}
\par\plain {\f0\fs24\b0\i0   \\begin\{align\}}
\par\plain {\f0\fs24\b0\i0     \\token\{M\}_g \\subseteq \\token\{M\}_f \\, &\\land \\, \\token\{M\}_g \\neq \\emptyset   \\label\{eq:modgnd-a\} \\\\}
\par\plain {\f0\fs24\b0\i0     \\forall \\token\{t\} \\in \\token\{M\}_g, \\exists \\token\{b\} \\in \\token\{M\}_b \\, &\\to \\, \\token\{t\} \\equiv \\token\{b\}  \\label\{eq:modgnd-b\} \\\\}
\par\plain {\f0\fs24\b0\i0     \\forall \\token\{t\} \\in \\token\{M\}_f \\setminus \\token\{M\}_g, \\forall \\token\{b\} \\in \\token\{M\}_b \\, &\\to \\, \\token\{t\} \\not\\equiv \\token\{b\}  \\label\{eq:modgnd-c\} \\\\ }
\par\pard\plain \tx1899\ql\ltrch\loch {\f0\fs24\b0\i0 \\intertext\{and\}}
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0   \\exists \\token\{t\} \\in \\token\{M\}_g, \\exists \\token\{b\} \\in \\token\{M\}_b, \\Gamma(\\token\{M\}_f, \\token\{M\}_b) \\, \\land \\, \\exists \\token\{b\}\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92 \\in \\token\{M\}_b\u8217\'92, \\Gamma(\\token\{M\}_f, \\token\{M\}_b\u8217\'92) &\\to \\token\{b\} \\equiv \\token\{b\}\u8217\'92 \\label\{eq:modgnd-d\} \\\\}
\par\plain {\f0\fs24\b0\i0 \\intertext\{where\}}
\par\plain {\f0\fs24\b0\i0     \\equiv \\text\{denotes semantic equivalence: \} \\token\{x\} \\equiv \\token\{y\} \\, &}{\f2\fs24 \\Leftrightarrow \\, }{\f0\fs24\b0\i0 \\intn(\\token\{x\}) = \\intn(\\token\{y\})    \\nonumber }
\par\plain {\f0\fs24\b0\i0   \\end\{align\}}
\par\pard\plain \ql\ltrch\loch {\f3\fs24\b0\i0 \\end\{subequations\}}
\par\plain {\f3\fs24\b0\i0 \\end\{mmdef\}}
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 >\\Cref\{eq:modgnd-a\} states that a forward-looking model uses at least one token ($\\token\{M\}_g \\neq \\emptyset$) that refer to germane entities in the domain. Then, \\cref\{eq:modgnd-b\} demands that for every token that refers to a germane entity ($\\token\{t\} \\in \\token\{M\}_g$), a token from the backward-looking model exists ($\\token\{b\} \\in \\token\{M\}_b$) that is equivalent to it, i.e., $\\intn(\\token\{t\}) = \\intn(\\token\{b\})$. Although it is not enforced to use the same token, such might improve readability of the models. Similarly, \\cref\{eq:modgnd-b\} allows for a surjective mapping between $\\token\{M\}_g$ and $\\token\{M\}_b$. \\Cref\{eq:modgnd-c\} is added to support the forward-looking models the use of tokens that do not refer to the domain of application but identify other type of entities in stead, probably system elements. Finally, \\cref\{eq:modgnd-d\} allows for multiple backward-looking models to exist that are used for grounding, as long as they all ground into the same concept in the conceptualisation. The rational for this is to allow for further modularisation of the conceptual model while the semantic SoC remains intact.      }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0 During modelling, and particularly of the forward-looking models, in order to maintain the semantic separation of concerns it is necessary to assess the many design decisions on their semantic consequences. For instance, consider a deployment diagram that couples software processes to hardware components in such a way that extra-functional requirements about reliability (fault-tolerance, continuity), performance and throughput, and scalability, are met.  }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0\cf1 ![Deployment model for an algorithm that computes heart rate from an ECG signal. The algorithm can be deployed on either (a) the sensor device or (b) the body hub][def:depldiag]}
\par\pard\plain \ri-16872\ltrch\loch \f0\fs24\b0\i0\cf1
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 \\Cref\{}{\f0\fs24\b0\i0\cf1 fig:deployment-diagram}{\f0\fs24\b0\i0 \} shows an example of a forward-looking (system) model, depicting two scenarios for deployment of a heart rate detection component. Such diagrams do not express any semantics or pragmatics whatsoever. In stead, the model addresses the balance between concerns, viz. performance in relation to continuity and throughput, and refer to specific components and data flows, identified by names *that have been specified in other models*, notably the ASM. The relationship between the system models and the ASM is one of reference: Despite the use of the terms [|ECG] and [|heart rate] to identify those entities, concerns about their meaning, viz. what the tokens refer to in reality, can remain intuitive since the balance in performance, continuity and throughput does not induce any semantic variations. However, such semantic SoC does not always apply. For example, assume that deployment (b) applies a more accurate heart rate detection algorithm than (a) because the body hub, e.g., a smart phone, is a more powerful device. A design decision in favour of deployment (a) implies a lower accuracy. Consequently, semantic SoC does not apply anymore because the pragmatic meaning of the derived heart rate signal is different from that in deployment (b). Therefore, the design choice for either deployment (a) or (b) will impact the reciprocity between data and their processing, which violates \\cref\{dp:semantic-coherence-principle\} that is to be maintained by the ASM. In order to restore semantic SoC, it becomes necessary to introduce the notion on [|accuracy] in the semantic model of the ASM, and include it explicitly to the [|heart rate] as derived by the pragmatic model. Since the heart rate signal now is extended with an accuracy measure, the variation in pragmatic meaning has now been taken into consideration by the ASM. By updating the related competency questions and their retrieval mechanisms, semantic SoC has been consolidated once again.        }
\par\pard\plain \ri-10760\ql\ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16872\ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf1 <!-- page additions -->}
\par\pard\plain \ri-10760\ql\ltrch\loch \f0\fs24\b0\i0\cf1
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0\cf1 [def:depldiag]: src\\images\\DeploymentDiagram.png \{#fig:deployment-diagram width=90%\}}}