{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-BoldMT;}{\f2\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0 Contemporary software architectures apply many models that collectively represent the software agent. We concluded that the conceptual model is a backward-looking (descriptive) model. However, many if not all of the other models that are applied are forward-looking (system) models, prescribing the structure and behaviour of the software agent as such. Indeed, the collective data of the forward-looking (system) models represent the state of the software agent, whereas the collective data of the conceptual model represents the state of affairs in reality. Naturally, the state of affairs impacts the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s state, and vice versa. What does this mean for the relationship between the system models and the conceptual model? The objective is to }
\par\plain {\f0\fs24\b0\i0 achieve a separation of concerns between the backward-looking conceptual model and the forward-looking system models, minimising the mutual dependency between them. Well separated concerns result in higher degree of freedom about, e.g., reuse, independent development, maintenance and evolution, to name a few. Separation of concerns (SoC), in its classical sense, refers to decomposing a system into parts with as minimal functional overlap as possible. It thus separates functionality that is required to maintain a certain concern. In the semantic orientation, we conclude that the thing that should be separated from the system models is the conceptualisation. Then, and only then,, the semantic model assures that the agent applies one single conceptualisation only, and, provides for consistency in answering any competency question [@Uschold1996] that the agent might have about the DoI. Moreover, for a scenario where another conceptualisation should apply, another ASM can provide for such while it remains to provide for, probably different, answers to the same competency questions in a consistent manner nonetheless. Although the latter scenario is rather academic, it shows how semantics can be addressed as a single concern that has minimal dependency with the rest of the agent. }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdef\}[Semantic separation of concerns]\\label\{def:semantic-soc\}}
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0 Semantic separation of concerns abstracts the conceptualisation node of the semiotic triangle from the agent, such that the agent remains agnostic about how the answers to its competency questions about the domain of application are established while these answers are faithful to the state of affairs, reflect the intention of the conceptualisation of the domain of application and remain consistent with it.}
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The previous sections already showed several of the semantic concerns that are addressed by the ASM, including the decomposition of semantics in a semantic and a pragmatic meaning, maintaining the coherence between them, their grounding in an ontological commitment, and a formal interpretation in the conceptualisation as a means of semantic validation of facts. Indeed, that specific techniques are required to model an ASM, one that applies, e.g., (i) a backward-looking mode of operation, (ii) a specific modelling language, (iii) inferencing and entailment, and more, remains transparent for any models that use the ASM. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Another necessary aspect of separation of concerns is for the component to provide for a stable interface in order to hide its specific characteristics. For the ASM we identify the following main interface services:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 1. Representation: The first and foremost concern is one of reference, viz. how do we represent a germane entity in the domain of application, uniquely over the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s models? This is not a new service and has already been addressed throughout the years in what have been named information models, schemata, or ER-diagrams. For its interface this translates to exposing each and every concept that are addressed by the competency questions to the agent;}
\par\plain {\f0\fs24\b0\i0 2. Structuring: Given any concept, the ASM should provide for any other concept that relates to it, either the particular relation that applies, or any logical relation that holds, e.g., subsumption, or disjointness;}
\par\plain {\f0\fs24\b0\i0 3. Existence: also known as satisfiability, assess whether a concept or relation has been instantiated by the current state of affairs;}
\par\plain {\f0\fs24\b0\i0 3. Validity: given an expressed statement, the ASM should provide for the ability to assess its validity in the current state of affairs, returning True, False or Unknown (the ASM assumes an open world);}
\par\plain {\f0\fs24\b0\i0 4. Equivalence: given two concepts or individuals, assess whether these are equivalent to each other or not;}
\par\plain {\f0\fs24\b0\i0 5. Membership: assert whether an individual is of a certain type or belongs to a certain concept;}
\par\plain {\f0\fs24\b0\i0 6. Retrieval: find the individuals or concepts that respond to the competency questions;}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 It might be useful to extent these capabilities with a subscription mechanism to become informed of any changes in respect to the particular aspect of the current state of affairs.          }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 During modelling, in order to maintain the semantic separation of concerns it is necessary to assess the many design decisions made on their semantic consequences. For instance, consider a deployment diagram that couples software processes to hardware components in such a way that extra-functional requirements about reliability (fault-tolerance, continuity), performance and throughput, and scalability, are met.  }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0\cf1 ![Deployment model for an algorithm that computes heart rate from an ECG signal. The algorithm can be deployed on either the sensor device or the body hub][def:depldiag]}
\par\pard\plain \ri-16872\ltrch\loch \f0\fs24\b0\i0\cf1
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 \\Cref\{}{\f0\fs24\b0\i0\cf1 fig:deployment-diagram}{\f0\fs24\b0\i0 \} shows an example of a forward-looking (system) model, depicting two scenarios for deployment of a heart rate detection component. Such diagrams do not express any semantics or pragmatics whatsoever. In stead, the model addresses the balance between performance concerns in relation to continuity and throughput, and refer to specific components and data flows, identified by name, *that have been specified in other models*, notably the ASM. The relationship between the system models and the ASM is one of reference: Despite the use of the terms [|ECG] and [|heart rate] to identify those entities, concerns about their meaning, viz. what the tokens refer to in reality, can remain transparent, since the balance in performance, continuity and throughput does not induce any semantic variations. However, such transparency does not always apply. For example, assume that deployment (b) applies a more accurate heart rate detection algorithm than (a) because the body hub, e.g., a smart phone, is a more powerful device. A design decision in favour of deployment (a) implies a lower accuracy. Consequently, semantic transparency does not apply anymore because the pragmatic meaning of the derived heart rate signal is different from that in deployment (b). Therefore, the design choice for either deployment (a) or (b) will impact the reciprocity between data and their processing, which violates \\cref\{dp:semantic-coherence-principle\} that is maintained by the ASM. In order to restore semantic separation of concerns, it becomes necessary to introduce the notion on [|accuracy] in the semantic model of the ASM, and include it explicitly to the [|heart rate] as derived by the pragmatic model. Since the heart rate signal now is extended with an accuracy measure, the variation in pragmatic meaning has now been taken into consideration by the ASM. By updating the related competency questions and their retrieval mechanisms, the semantic separation of concerns have been consolidated once again.        }
\par\pard\plain \ri-10760\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We therefore conclude the need for maintaining the semantic separation of concerns between the backward-looking ASM and the forward-looking system models. This is similar to the normal forms as applied in database engineering, now in order to abstract semantic variations away by introducing explicit -ilities, viz. building consistency between the conceptual model and system models. We conclude furthermore that the relationship between the ASM and the forward-looking system models is constrained to one of *conformance* and *use*, formulated formally as   }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 * }{\f1\fs24\b1\i0 Conformance}{\f0\fs24\b0\i0 : Conformance represents a type of relationship that expresses a relation between two adjacent levels, e.g., a model and its meta-model. Naturally, such relation cannot exist without taking into account the relations between the elements from the model and those from the meta-model. Since a (meta-)model ($M$)$M$ is a compound of tokens $\\token\{e\}_i$, mathematically, that means $\\forall \\token\{e\}_i \\in \\token\{M\} \\; \\exists f \\in MM : K(e_i) = f$, with $K(\\cdot)$ the }{\f2\fs24\b0\i1 classification}{\f0\fs24\b0\i0  relationship;}
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 * }{\f1\fs24\b1\i0 Use:}{\f0\fs24\b0\i0  This relation only exists between a model (level) and elements from another model (level). This relation expresses that a model (level) applies an element that has been specified in another model. Mathematically it is only slightly different from the }{\f2\fs24\b0\i1 conformance}{\f0\fs24\b0\i0  relation. Consider two models, $M_a$ and $M_b$, then $M_b$ uses $M_a$, denoted $\\textit\{use\}(M_b, M_a) \\textit\{ iff \} \\, \\exists b \\in M_b \\, \\land \\, a \\in M_a \\to b \\equiv a$. This relation is less strict than the }{\f2\fs24\b0\i1 conformance}{\f0\fs24\b0\i0  relation in the sense that it is not necessary that every element in $M_b$ is used from $M_a$. We however enforce that a token from model $M_b$ is only used from one element from one other model: consider $\\forall b \\in M_b$ and $\\forall \\textit\{use\}(M_b, M_i)$then it follows that $b \\equiv a \\land b \\equiv c \\to \\exists_1 M: a, c \\in M \\land a \\equiv c$ (where $\\exists_1$ denotes *exactly one occurrence*).}
\par\pard\plain \ri-10760\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 ----}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Now consider an activity diagram of an epileptic seizure event detection process, depicted in \\cref\{}{\f0\fs24\b0\i0\cf1 fig:activity-diagram}{\f0\fs24\b0\i0 \}.    }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0\cf1 ![An activity diagram, modelling concurrency and synchronisation aspects][def:actdiag]}
\par\pard\plain \ri-16872\ltrch\loch \f0\fs24\b0\i0\cf1
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0 This activity diagram, too, is a forward-looking (system) model, and expresses how the detection of an epileptic seizure depends on the two concurrent threads delivering convulsion (based on acceleration data) and heart rate events (based on ECG data), the latter with an additional thread timing requirement to remain within one heartbeat. Like the previous deployment diagram, this diagram neither expresses semantics nor pragmatics. Unlike the previous diagram, it does  about ECG or Accuracy, nor the quality of the measurement.  }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 ----}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 Indeed, by definition of being forward-looking, the models can and will be verified towards their meta-model. Such verification, however, is only in respect to their syntactical formulation. }
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 , whereas their meaning should be sought in their relation with the conceptual model. Thus, supporting a semantic verification of the system models demands a clear formal characterisation of the relations with their conceptual model. Furthermore, a similar support of the verification of the coherence within the conceptual model demands a similar formal characterisation of the relations between the semantic model, the pragmatic model, their reference model and the foundational ontology that formulates the ontological commitment. These formal characterisations are the subject of this section. To that end we first present the tooling that we require for these formalisations, viz. formal semantics. The use of mathematics is much more accurate than any other language, and, the mathematical language remains consistent over the different models that we address. Together, this facilitates in tracing the semantic consistency throughout the agent.}
\par\pard\plain \tx720\ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 We consider a formal language $L$ to be nothing more than a set of strings over an alphabet $\\Sigma$. The grammar of the language, denoted $G$, limits the language to a particular subset of all possible strings over $\\Sigma$, called *theories*, and collectively denoted as $T$. This means that a formal grammar is, essentially, a machine that generates its formal language. Any (composition of) symbol(s) from $\\Sigma$ that violates any of the grammatical rules from $G$ is not part of the language $L$. Together, the grammar and the alphabet create a mathematical structure $\\tuple\{\\Sigma, G\}$, denoted the *abstract syntax* of the language.  }
\par\pard\plain \ri-8561\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16872\ql\ltrch\loch {\f0\fs24\b0\i0 When we talk about the semantics of a language $L = \\tuple\{\\Sigma, G\}$, we refer to the truth value that can be assigned to a theory $\\lambda \\in L$ that is generated from grammar $G$ over its alphabet $\\Sigma$. Tarski concluded that the truth value of a theory in a language cannot be defined within that same language [@Tarski:1944wr]. Consequently, a representation always needs to consider two languages, the *object* language that one uses to communicate theories, and its higher order *metalanguage* that is used to talk about the truth of theories from the object language. To determine the truth value of a theory, two constructs are required. Firstly, the *interpretation* function can make the transition from the language domain to the metalanguage domain. This function, denoted $\\intn$, will take a theory $\\lambda$ as argument and produces a construct in the metalanguage. In formal semantics, several metalanguages can apply, e.g., petri-nets, but the metalanguage that is usually applied in literature for information modelling is set theory, which we use here as well. Hence, $\\intn : \\Sigma \\to \\EuScript\{D\} \\cup \\EuScript\{R\}$. Here, $\\EuScript\{D\} \\cup \\EuScript\{R\}$ specifies the DoI in set theory by specifying (i) the individuals of interest, denoted $\\EuScript\{D\}$, and (ii) the relations of interest, $\\EuScript\{R\}$. The latter specify those parts of the DoI that are characterised by a number of elements that play a part in the relation, viz. their arity. Relations are used to refer to categories, e.g., the individuals from a subset that are cars (a unary relation), or the marriage between two individuals (a binary relation), or the relation between particular marriages and the individual who closed those marriages (another binary relation), or the class of 1999 (where $n$-ary equals the number of students passing the exams). In other words, any well-formed formula of the language can be extended in set theory. Following the *principle of semantic compositionality*, the interpretation function assigns for every constant symbol in $\\Sigma$ that occurs in $\\lambda$, zero, one or more element(s) in $\\EuScript\{D\}$, and for every $n$-ary predicate symbol in $\\Sigma$ that occurs in $\\lambda$, one or more $n$-ary relation(s) in $\\EuScript\{R\}$, and for every connector that represent operators used by the grammar of the language, e.q., a logical AND, to a set operation, e.g., here conjunction. Note that the definition does not enforce $\\intn(\\cdot)$ to be surjective on $\\EuScript\{D\} \\cup \\EuScript\{R\}$; in fact, it allows for being non-injective as well (elements from $\\EuScript\{D\} \\cup \\EuScript\{R\}$ can be assigned more than one token).}
\par\plain {\f0\fs24\b0\i0 Secondly, a *valuation* function is required, denoted $\\Phi$, which establishes the truth of a metalanguage construct. This is a rather simple function since it only needs to establish whether the individuals and relations that are part of the construct are indeed present in the DoI, $\\EuScript\{D\} \\cup \\EuScript\{R\}$, as suggested by the construct. For instance, if the construct suggests that an individual, e.g., that particular thing of mine that has got four wheels, belongs to a particular subset, e.g., the set of cars, then the valuation function checks whether $c$, representing the subject individual, is part of $C$, representing the subset of cars: $\\Phi(c \\in C) = \\concept\{T\}$ iff $c \\in C$ and $\\concept\{F\}$ otherwise. Note that the valuation function is often deemed implicitly by the interpretation function: $\\intn : L \\to \\EuScript\{D\} \\cup \\EuScript\{R\} \\cup \\domB$.   }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf1 <!-- page additions -->}
\par\pard\plain \ri-10760\ql\ltrch\loch \f0\fs24\b0\i0\cf1
\par\pard\plain \ri-10760\ltrch\loch {\f0\fs24\b0\i0\cf1 [def:depldiag]: src\\images\\DeploymentDiagram.png \{#fig:deployment-diagram width=90%\}}
\par\plain {\f0\fs24\b0\i0\cf1 [def:actdiag]: src\\images\\ActivityDiagram.png \{#fig:activity-diagram width=90%\}}}