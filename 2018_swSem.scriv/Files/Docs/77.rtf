{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 Contemporary software architectures apply many models that collectively represent the software agent. We concluded that the conceptual model is a backward-looking (descriptive) model. However, many if not all of the other models that are applied are forward-looking (system) models, prescribing the structure and behaviour of the software agent as such. Indeed, the collective data of the forward-looking (system) models represent the state of the software agent, whereas the collective data of the conceptual model represents the state of affairs in reality. Naturally, the state of affairs impacts the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s state, and vice versa. What does this mean for the relationship between the system models and the conceptual model? The objective is to achieve a separation of concerns between the backward-looking conceptual model and the forward-looking system models, minimising the mutual dependency between them. Well separated concerns result in higher degree of freedom about, e.g., reuse, independent development, maintenance and evolution, to name a few. Before we investigate the relation between the system and conceptual models, we characterise the different kinds of relations.}}
