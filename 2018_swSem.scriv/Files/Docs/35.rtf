{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-17683\ql\ltrch\loch {\f0\fs24\b0\i0 We do not partake in the debate following Searle\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s Chinese room experiment [@Searle:1980hw] on the (im)possibility for computers to think and understand, but assume the position taken and investigate its consequences. We base our work on the discipline of semiotics and conclude that genuine semantics cannot exist in current software. We apply the outcome of our investigation, viz. \\cref\{dp:semiotic-pragmatic,dp:comprehension-behaviour,dp:reciprocity,dp:atomicity,dp:semantic-coherence\}, to software architecture, resulting in a semantic view and supporting viewpoint.}
\par\pard\plain \ri-17683\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 We have introduced 3 concerns addressing semantics in software. The *semiotic and pragmatic concern* concludes that in software, semantics is reduced to the reciprocity between data and software code: the Atomic Semantic Monolith (ASM); we introduce 5 design principles to its effect, and show that \\cref\{def:token-grounding,def:model-grounding\} on token and model grounding suffice for establishing a reduced but sufficient form of semantic grounding for the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s behaviour (\\cref\{dp:semantic-grounding\}). The *domain appropriateness concern* establishes that a modelling language itself already contributes to semantics; we identify 2 design principles necessary for a Domain Model to carry faithful semantics. Finally, the *architectural consistency concern* addresses how the software agent applies the Domain Model to reflect the state of affairs in reality as well as its particular knowledge rules that apply. We identify 2 design principles to maintain its loosely coupled -and consistent- use by the System Model. We validate these concerns and design principles by showing how they commit to the requirements that are established by ISO42010\u8217\'92s architectural viewpoint and view: The fundamental design principles of separation of concerns, high cohesion and low coupling, as applied from a semantic perspective (\\cref\{dp:semiotic-pragmatic,dp:comprehension-behaviour,dp:reciprocity,dp:semantic-coherence,dp:atomicity\}), give the Domain Model the required properties of an architecture view of the system. \\Cref\{dp:domain-faithfulness,dp:language-appropriateness,dp:three-faceted-services,dp:semantic-grounding\} represent the basis to define all elements of the semantic viewpoint. In conclusion, the design principles collectively represent the foundational rules to define both the semantics view and its governing viewpoint in accordance with the definition of the standard of architecture description. Some remarks are in order, though.}
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0  }
\par\pard\plain \ri-17683\ql\ltrch\loch {\f0\fs24\b0\i0 * \\Cref\{dp:comprehension-behaviour\} calls for a clear boundary between behaviour and comprehension. This boundary has not been fully characterised, yet. More research is required to establish a proper principled approach; in our view, positioning the Event-Control-Action pattern [@Costa2005] on that very boundary, or analysing the results of a substantial application of \\cref\{heur:how-to-discern\} will be rather effective;}
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0 * We consider the three distinct facets of the semantic service a necessary condition for the semantic component. It remains unclear whether their inclusion is a sufficient condition as well, and is subject to further investigations and experiments;}
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 * Despite our argumentation that \\cref\{dp:domain-faithfulness,dp:language-appropriateness,dp:three-faceted-services,dp:semantic-grounding\} are fundamental to defining a concrete semantic viewpoint, engineering a proper elaboration on all its constituent elements is in order;  }
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0  * Although we have given a motivating example in \\cref\{addressing-system-qualities\}, the consequences of the semantic view and viewpoint in, particularly, semantic interoperability is yet unclear. In a subsequent paper we establish how semantic interoperability can be consolidated into contemporary software architectures. }
\par\pard\plain \ri-16872\ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0 We consider the 3 concerns and 9 design principles the necessary and sufficient conditions to consolidate semantics in contemporary software architecture. We are confident that they contribute to the scientific consensus on semantics in software that is necessary to their abstraction as semantic services into the infrastructure.}
\par\plain {\f0\fs24\b0\i0            }
\par\plain \f0\fs24\b0\i0}