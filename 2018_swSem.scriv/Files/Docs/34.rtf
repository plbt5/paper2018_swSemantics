{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 In [@Lankhorst2017, sec.3.3], the authors emphasise the importance of semantics and argue that distinct views still have something in common, namely the semantics of the architecture. They position semantics as the formal (that is, mathematical) interpretation of symbolic models in mathematical objects. Their implementation of this view is to focus on the formal semantics of the architecture language that is applied. We can appreciate this approach, however, experience the sparsity in its language support for representing the Domain Model. Already suggested in \\cref\{the-domain-model-is-a-view-of-the-system-architecture\}, this lack in domain faithfulness can be corrected by complementing the ArchiMate ADL with a domain faithful ontological commitment as modelling language.  }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The use of ontologies as information model is suggested before. [@Almeida2018a] represents a typical discussion on the foundations of an ontological-based architecture for organising information and knowledge. They too consider the use of a top-level ontology (BFO). Not unlike many other publications that discuss the use of ontologies to account for semantics, the authors are merely concerned with provisioning an ontological perspective on the DoA, and do not consider its principled position in a software architecture. Vice versa, in literature on software architecture, many authors emphasise the need for an information view or model to account for semantics, and obviously provide for its relation with other views and models in that architecture. In fact, this can be considered the current view in leading architectural frameworks such as TOGAF, RM-ODP, ISO42010. As stated earlier, these information views neglect the influence of the modelling language as ontological commitment on semantics, the semiotic foundations and its subsequent explicit separation between the semantic and pragmatic meaning.  }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ltrch\loch {\f0\fs24\b0\i0 The notion on semantic coherence (\\cref\{dp:semantic-coherence\}) can be seen in object-orientation (OO) as well, where the class is a construct similar to a semantic monolith. However, due to the absence of a formal underlying framework and, henceforth, a formal DoI, it cannot meet all demands of the coherence principle. Still, OO indeed enforces reciprocity between data and data operations (\\cref\{dp:reciprocity\}), but neglecting \\cref\{dp:language-appropriateness,dp:domain-faithfulness\} does so with reduced faithfulness.}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 We have to go back to [@Krishnamurthy1988; or @Su1989] for a software architecture that explicitly considers semantics of data and also provides a framework for representing data and knowledge integrated. These authors combine object-orientation with AI knowledge representation techniques - to our knowledge the only proposal to integrate knowledge rules as necessary elements to a class definition. They also distinguish from other object-oriented approaches by allowing different classes to model different perspectives of the same object without running into the problem of multiple inheritance. Together, this comes close to our ASM except for our emphasis on coherence between the semantic and pragmatic meaning, and, the need for an ontological commitment.}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 The differentiation between knowledge and information in order to abstract from idiosyncrasies of specific technology is fundamental in the openEHR framework^[https://www.openehr.org/, accessed Jan 24, 2020] with CEN 13606 as its accompanying European and ISO standard. It was introduced and further elaborated by Beale and co-authors [@Beale:2001vz;@Beale2007a;@Beale2008a;@Beale2007;@Beale2008;@Beale2007b;@Beale2007c]. This paradigm modelled the generic knowledge apart from the specific information structures, allowing the former to constrain the latter. Knowledge is embodied by }{\f1\fs24\b0\i1 archetypes}{\f0\fs24\b0\i0 . The Archetype Model (AM) can be considered a meta-model or modelling language to express archetypes, somewhat similar to the ontologies that specify the ASM. The Reference Model (RM) is also a meta-model that forms the language for the information models that carry the actual data. Since the AM constrains the RM, the specified archetypes constrain the interpretation of the generated data. This makes the openEHR framework a Semantic Web avant-la-lettre. However, these constraints apply to the validity of the data structures and values only. Moreover, the implicit ontological commitment is rather oriented to software characteristics. Finally, this paradigm lacks the need for coherence between the semantic and pragmatic meaning.}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 [@Bachmann2007] propose an approach to Ontology-based Software Engineering (OBSE) that identifies the use of ontologies in the process of software engineering. Software engineering projects inherit from existing ontologies in their early (analysis and modelling) phases and offer (parts of) their results for further ontology development and evolution. This approach makes sense, particularly when we acknowledge that business requirements analysis is often hampered by ambiguities and misunderstandings that occur between domain experts and requirements analysts. The application of OBSE in any form isn\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t rare anymore. However, it represents a process approach while our approach is oriented towards the role and meaning of semantics in software and their consequential semantic artefacts. Where we consider ontologies as first-class citizen for a software architecture, they consider ontologies as a means to develop the architecture. Given their complementary perspectives, merging both approaches will show advantageous.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 [@Carraretto2012] provide initial steps for a principled two-level approach: an ontological level that essentially provides for a vocabulary that is used at the information level to formulate an *information model*. We acknowledge their observation that reusing the conceptual (i.e., backward-looking) model by their information level (i.e., forward-looking models), demands one or more relations between them. Nevertheless, in our opinion the core question is about the necessary and sufficient characteristics of these relationships, and we seek our answer in the distinction between, and reciprocal support to, the concerns of both models, as opposed to the characteristics of the ontology alone.      }
\par\pard\plain \ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Research into the use of Stamper\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s semiotic framework [@Stamper1991] in the context of system integration [@Li2013; and @Li2014] and for elaborating characteristics and attributes of information [@Boell:2010ub], are examples of the recognition of the role of semiotics in ICT. Semantics and pragmatics are separated but connected, although not as strict as our reciprocity principle. From this, necessary types of information [@Boell:2010ub], and organisational context [@Li2013; @Li2014] are derived. Both may provide practical attributes to consider when further elaborating on the semantic viewpoint.      }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 Several authors base their solution to the semantic model on OMG\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s four-layer hierarchy. According to the strict meta-modelling approach of OMG, an instance-of relation is only valid between its subsequent layers, while its use within a single layer is prohibited. Hence, a model is an instance-of its meta-model. [@Atkinson:2001kl] discuss the inherent conflicts of this approach, especially with semantics, and coins *multilevel (meta)modelling* methods. These distinguish between *linguistic instantiation* versus *ontological instantiation*. The former assumes the four layer MOF hierarchy connected by a type-instance relationship denoted as }{\f1\fs24\b0\i1 linguistic instance-of}{\f0\fs24\b0\i0  (or }{\f1\fs24\b0\i1 conforms-to}{\f0\fs24\b0\i0  [@Bezivin2004; @Favre2004a]); the latter assumes one single genuine }{\f1\fs24\b0\i1 instance-of}{\f0\fs24\b0\i0  relationship between the universals and their individuals, denoted *ontological instance-of*. Although [@Atkinson2003; and @Atkinson2011] clearly identify the necessity for both modes of modelling, the method of their integration is not without issues [@Henderson-Sellers2012]. Alternatively, [@A\loch\af0\hich\af0\dbch\af0\uc1\u223\'DFmann2006] discuss the use and place of ontologies and meta-models in the MDE paradigm. They conclude, like us, that meta-models prescribe the capabilities of the modelling language. Their objective is to find a proper place for ontologies in OMG\u8217\'92s four layer MOF hierarchy. We value their conclusions that ontologies can be applied as descriptive domain models, domain specific languages or modelling (descriptive) languages, but disagree with their semantic *normative* intention. Our investigation into the nature of semantics, the necessary consideration of the semiotic triangle, the placement of ontologies, models and meta-models in architecture, however, leads us to more specific conclusions on the relationship between semantics, ontologies and system models. [@Gasevic2006a] consider ontologies and the MDE paradigm, specifically oriented towards applications of the MDA for ontology development on the Semantic Web. This is closely related to OMG\u8217\'92s initiative to standardise the Ontology Definition Metamodel (ODM) using the MOF. Part-II on MDA and Ontologies is particularly relevant to our work as it tries to establish the relationship between the various domain and system models. We appreciate their modelling technique to incorporate ontologies in the MOF, but conclude that a *normative* modelling framework does not consolidate semantics, and particularly not contribute to infrastructural semantic standards and services. }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 An interesting initiative about a further *semantic* validation can be found in [@Szlenk2006]. The authors define a verification of a class diagram on whether the intended model instances of the diagram satisfy the constraints that have been defined, and, where classifiers are applied consistently over the intended model instances. Despite the elaborate mathematical verification, it remains applicable to system modelling only; this is due to the absence of a formal semantic grounding (\\cref\{domain-appropriateness-concerns\}).}
\par\pard\plain \ri-17053\ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0 In Domain-Driven Design (DDD) [@Evans2003] the notion of Domain Model is the pillar of software development: the implementation is directly connected to a model of the core business concepts. It is valuable when addressing complex business needs. Being an approach, however, it does not provide an actual method or tool to apply the design practices. MDE/MDA also emphasizes the importance of the Domain Model: in MDA, the Computer Independent Model (CIM) is the first model to design in the chain of transformation (from platform independence to platform specificities); MDE [@Bezivin2006] generalises the MDA approach, with coexisting models describing the system from multiple concerns. Although acknowledging the importance of the Domain Model, they elaborate neither on the Domain Model nor on its design principles. Our proposal contributes to model-driven approaches with a clear definition of the semantic view and the principles associated with its governing viewpoint. }
\par\pard\plain \ri-17053\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17683\ltrch\loch {\f0\fs24\b0\i0  }
\par\pard\plain \ri-17053\ql\ltrch\loch \f0\fs24\b0\i0}