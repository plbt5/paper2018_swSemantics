{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 monospace;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 Indeed, the above semantic monolith is not a new phenomenon in software agents. In fact one can consider each and every piece of software a semantic monolith. In a broader context, a semantic message standard essentially builds a homogeneous semantic meaning to be shared by all participating software agents; the pragmatic meaning is then left as an exercise to the software engineer who is responsible for designing a data processing model that is to effectuate the required valid reciprocity. Nevertheless, a semantic monolith emerges for each software agent. We defend that an architecture should not accept the emergence of a monolith as a consequence but instead present design principles that avoid monoliths but produce modularisation. We consider the size of the semantic monolith an influential parameter in establishing modularisation and build on principles of high cohesion, low coupling and atomicity: big enough to avoid micro-management but not bigger than required. Atomicity refers to (i) the level of granularity at which the (germane) entity that is referred to by the data token is considered a non-dividable whole, (ii) the smallest size of an ASM, and (iii) the single non-interruptible process of determining consequences from its premises. }
\par\pard\plain \ri-10760\ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16872\ql\ltrch\loch {\f0\fs24\b0\i0 ![Atomicity, ASM\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s and models: *C* elements denote data tokens, *P* elements data processing tokens; *P-model* denotes the pragmatic model, *S-model* the semantic model, and *D-model* the domain model.][def:atomicity]}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 We first consider the granularity of the data tokens. Although it is the intention to make the ASM as small as possible, it doesn\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t make sense to make it smaller than required to express an atomic state of affairs, i.e., a germane entity. The atomic size for a data token, then, equals the level of granularity at which the (germane) entity that is referred to is considered a non-dividable whole. This has been depicted schematically in \\cref\{fig:atomicity\} with the small $C$-circles, whereas the $P$-hexagons denote the data processing tokens. The atomicity of these are defined by a high level of cohesion and low coupling between them with respect to the data tokens that are processed. We subsequently consider the atomicity of the semantic monoliths that emerge. We start with a trivial case and gradually increase the complexity in order to establish the atomicity of the semantic monolith.}
\par\plain {\f0\fs24\b0\i0 \\begin\{description\}}
\par\plain {\f0\fs24\b0\i0   \\item[Cases $P5$ and $C2$:] Assume an orphan entity in the DoA, referred to by $C2$, that is not uses by a pragmatic meaning. Assume furthermore an orphan pragmatic meaning token, $P5$, that does not require any semantic meaning. For both $C2$ and $P5$ the reciprocity principle cannot apply, hence both are not considered part of any ASM;  }
\par\pard\plain \ri-16946\ql\ltrch\loch {\f0\fs24\b0\i0   \\item[Case $\\pair\{P1; C1\}$:] Assume a thermometer component where data token $C1$ denotes a temperature, \\token\{t = 39 }{\f1\fs24\b0\i0 \\celsius}{\f0\fs24\b0\i0 \}, and the processing token $P1$ \\emph\{initiates\} appropriate application behaviour, e.g., refreshing the temperature value on the display. Since the atomicity of such classic thermometer application $P1$ only addresses $C1$, then $\\pair\{P1; C1\}$ depicts the just size of the ASM; }
\par\plain {\f0\fs24\b0\i0   \\item[Case $\\pair\{P1; C2\}$:] When we extend this trivial example with an indication of fever, the latter refers to a particular SoA and, hence, needs a place in the ASM. $P1$ then includes the derivation of data token $C2$, [|fever], e.g., \\token\{t > 37.0\} $\\to$ \\token\{fever\}, and $\\pair\{P1; C2\}$ becomes a semantic monolith as well. Since $P1$ requires both data tokens $C1$ and $C2$ for its pragmatic meaning, $C2$ needs to be included in ASM-1 that now denotes $\\pair\{P1; C1, C2\}$;       }
\par\plain {\f0\fs24\b0\i0   \\item[Case $\\pair\{P2; C2\}$:] Assume we introduce an alarm component $P2$ to send an alarm to a medical professional whenever fever is established. Although as trivial as the first case, $\\pair\{P2; C2\}$ applies as semantic monolith. Different than the second case, here the data token $C2$ is only used by two different pragmatic meanings $P1$ and $P2$, where for both it is irrelevant whether $C2$ is a necessary condition for another pragmatic meaning. Indeed, $P2$ cannot change its unit of operations without consequences for $P1$. In the naive semantic reading, cohesion only applies between pragmatic and semantic meaning and not between pragmatic meanings or semantic meanings themselves. This example, however, makes clear that cohesion also applies between ASM\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s when a data token is shared. In conclusion, $P2$ needs to be included in ASM-1 that then becomes $\\pair\{P1, P2; C1, C2\}$. Still, $C2$ takes a special role as potential coupling concept between two distinct pragmatic meanings. This role can be exploited for further decomposition into coupled semantic monoliths if and only if its dependency between the monoliths remains acknowledged;     }
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0   \\item[Case $\\pair\{P3; C3, C4 -r1- C5\}$:] This case addresses a situation where a semantic relationship, $r1$, exists between semantic meanings, i.e., assume we consider temperature, $C4$, to [|inhere-in] an [|object] such as a human, $C5$. Assume $P3$ to derive [|fever], $C3$. Clearly this derivation holds for any human. However, inclusion of the [|temperature] [|inhere-in] an [|object] in the model on semantic meaning might imply that other objects than human can apply as well, e.g., [|cat]s. In order to maintain a valid reciprocity, at a minimum $P3$ must verify that the object in question is a human indeed. This already enforces to include $-r1- C5$ in the ASM. Additionally, $P3$ might want to also include knowledge on establishing fever with [|cat]s: \\token\{t > 39.7\} $\\to$ \\token\{fever\}. Oppositely, now assume the pragmatic meaning $P3$ to establish $C3$ as the [|minimal temperature] in the population in stead. With this semantics, whether the objects of interest are humans or cats, or dogs or cups of coffee, is irrelevant; only one of the objects shows the lowest temperature of them all. Then, no argument based on $-r1- C5$ exists that will modify the outcome of the pragmatic meaning, hence no reason exists to include $-r1- C5$ in the ASM. In other words, coherence is measured in terms of a concept\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s relevance to the pragmatic meaning.  }
\par\plain {\f0\fs24\b0\i0 \\end\{description\}}
\par\pard\plain \ri-16872\ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We summarise these observations in the following design principle.}
\par\pard\plain \ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16946\ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdp\}[Semantic atomicity principle]\\label\{dp:atomicity\}   }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 A single ASM can never be smaller than a single $\\pair\{\\token\{C\}; \\token\{P\}\}$ pair, and must never be larger than to only include (i) overlapping $\\pair\{\\token\{C\}; \\token\{P\}\}$ pairs, and (ii) concepts $C\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92$ that are related by $r$ to an already included concept $C$, i.e., $C -r- C\u8217\'92$, if and only if individuals from $-r- C\u8217\'92$ impact the validity of the pragmatic meaning of that ASM. }
\par\plain {\f0\fs24\b0\i0 \\begin\{description\}}
\par\pard\plain \ri-16946\ltrch\loch {\f0\fs24\b0\i0   \\item[Type of information:] business, application, data }
\par\plain {\f0\fs24\b0\i0   \\item[Quality attributes:] suitability, accuracy, interoperability, compliance, traceability; maturity; understandability, operability, clarity; analysability, changeability, manageability; reusability;}
\par\plain {\f0\fs24\b0\i0   \\item[Rationale:] Considering that}
\par\plain {\f0\fs24\b0\i0   \\begin\{enumerate\}}
\par\plain {\f0\fs24\b0\i0     \\item it doesn\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t make sense to refer to entities both on a higher as well as on a lower granular level than germane entities;}
\par\plain {\f0\fs24\b0\i0     \\item the relevance for germane entities are only found in their pragmatic meaning;}
\par\plain {\f0\fs24\b0\i0     \\item the reciprocity principle is based on a pair of pragmatic and semantic meaning that together constitute an ASM, $\\pair\{P; C\}$;}
\par\plain {\f0\fs24\b0\i0   \\end\{enumerate\}}
\par\plain {\f0\fs24\b0\i0   \\item[] we conclude that the ASM can never be smaller than a single $\\pair\{P; C\}$ pair. }
\par\plain {\f0\fs24\b0\i0   \\item[] And considering that }
\par\plain {\f0\fs24\b0\i0   \\begin\{enumerate\}}
\par\pard\plain \ri-16946\ql\ltrch\loch {\f0\fs24\b0\i0     \\item overlapping $\\pair\{P; C\}$ pairs influence their mutual pragmatic meanings;}
\par\plain {\f0\fs24\b0\i0     \\item concepts $C\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92$ that are related by $r$ to an already included concept $C$ might influence the pragmatic meaning that requires $C$;}
\par\pard\plain \ri-16946\ltrch\loch {\f0\fs24\b0\i0   \\end\{enumerate\}}
\par\plain {\f0\fs24\b0\i0   \\item[] we conclude that the ASM can never be larger than what emerges when including overlapping $\\pair\{P; C\}$ pairs as well as $C -r- C\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92$ relations and concepts that potentially influence the pragmatic meaning for $C$.}
\par\plain {\f0\fs24\b0\i0   \\item[Implications:] }{\f0\fs24\b0\i0 \\hfill\{\}}{\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0   \\begin\{enumerate\}}
\par\pard\plain \ri-16946\ql\ltrch\loch {\f0\fs24\b0\i0     \\item The pragmatic meaning is the primary driver for the atomicity of an ASM;}
\par\plain {\f0\fs24\b0\i0     \\item The key differentiator for including a concept in an ASM relates to whether the DoA allows a state of affairs with it that would influence the validity of the pragmatic meaning, or not;}
\par\plain {\f0\fs24\b0\i0     \\item ASM\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s that share a (coupling) concept belong to one ASM;}
\par\plain {\f0\fs24\b0\i0     \\item Each and every semantic meaning as well as each and every pragmatic meaning that partake in a reciprocity pair must be part of an ASM;}
\par\plain {\f0\fs24\b0\i0     \\item By token of the atomicity principle, the introduction of a new SoA, i.e., data, will address one ASM only. This facilitates the potential to design a single, non-interruptible process for one single ASM to determine the consequences from a new state of affairs. In this way the semantic vehicle can stabilise before taking subsequent actions, or new states of affair, into account.       }
\par\pard\plain \ri-16946\ltrch\loch {\f0\fs24\b0\i0   \\end\{enumerate\}}
\par\plain {\f0\fs24\b0\i0 \\end\{description\}}
\par\plain {\f0\fs24\b0\i0 \\end\{mmdp\}}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 Finally, we denote the resulting models as follows (depicted in \\cref\{fig:atomicity\}, above):}
\par\pard\plain \ri-16946\ltrch\loch {\f0\fs24\b0\i0 \\begin\{description\}}
\par\plain {\f0\fs24\b0\i0   \\item[semantic (meaning) model:] this term denotes the model that emerges when viewing the data tokens that appear in the ASM\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s collectively, representing the semantic meaning of the software agent;}
\par\plain {\f0\fs24\b0\i0   \\item[pragmatic (meaning) model:] this term denotes the model that emerges when viewing the data processing tokens that appear in the ASM\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s collectively, representing the pragmatic meaning of the software agent;}
\par\plain {\f0\fs24\b0\i0   \\item[domain model:] this term denotes the model that emerges when viewing the ASM\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s collectively, representing the DoA that the software agent is concerned with. }
\par\plain {\f0\fs24\b0\i0 \\end\{description\}}
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 The term \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93model\u8221\'94 that is used with these denotation can refer to both a set of related diagrams or the set of theories that are allowed by the modelling language (see \\cref\{the-nature-of-models\}); that distinction is irrelevant here.}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 <!-- page additions -->}
\par\pard\plain \ri-10760\ql\ltrch\loch {\f0\fs24\b0\i0 [def:atomicity]: src\\images\\Atomicity.png \{#fig:atomicity }{\f0\fs24\b0\i0\cf1 width=90%}{\f0\fs24\b0\i0 \}}
\par\plain \f0\fs24\b0\i0}