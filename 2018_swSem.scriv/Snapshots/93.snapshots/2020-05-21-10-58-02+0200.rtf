{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fnil\fcharset0\fprq2 MS Shell Dlg 2;}{\f1\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f1\fs24\b0\i0 Architecting a software system is an engineering process integrated within the software lifecycle processes, as described in the international standard ISO/IEC/IEEE 12207:2017^[https://www.iso.org/standard/43447.html]. Architecting a software system is about taking the main technical decisions about realising the business goals with software elements. The architecture is indeed defined as the \loch\af1\hich\af1\dbch\af1\uc1\u8220\'93fundamental concepts or properties of a system in its environment embodied in its elements, relationships, and in the principles of its design and evolution\u8221\'94. The architecture of a system is an abstraction of the system from which those decisions can be understood and traced back to the needs. The drivers in the decision making process are the expected qualities of the system, either specifically required by the stakeholders, or  commonly accepted by the practitioners. Standard catalogues of those system qualities exist, such as the ISO2500 family of standard, which not only defines a nomenclature of qualities but also processes to specify and evaluate them all along the software development life-cycle. They are also referred to as the quality attributes, or the -ilities of the system, and encompass: interoperability, scalability, availability, performance, usability, security, and many more [Software Architecture in Practice, 3rd Edition]. Architecture patterns are usually applied to meet the quality requirements: a pattern is a coded solution to a given problem in a specific context. Patterns in architecture can be an answer to very generic problems (layered architecture to manage dependencies amongst components, service oriented architecture to maximise coherence and minimise coupling), but also to more specific problems (enterprise integration patterns are solutions to technical interoperability amongst various systems). Architecting a software system is therefore a process driven by the need to build software exhibiting qualities, and applying the best practises in the art of software engineering, and the main artifact produced by this process is the so-called software system architecture, i.e. \u8220\'93the fundamental structure of a software system\u8221\'94 exhibiting the expected qualities associated with software.}
\par\plain \f1\fs24\b0\i0}