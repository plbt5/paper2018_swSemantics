{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 ISO42010:2011 *Systems and software engineering \hich\f0 \emdash \loch\f0  Architecture description* [@ISO420102011] acknowledges that the architecture of a system needs to be described from multiple perspectives, and that these perspectives are not independent of each other.}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 The standard defines an Architecture View as \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93the description of the architecture of the system of interest from the perspective of one or more stakeholders to address specific concerns\u8221\'94. As for the Architecture Viewpoint, it is \u8220\'93a set of conventions for constructing, interpreting, using and analysing one type of Architecture View\u8221\'94. An architecture view is therefore governed by its viewpoint in terms of model kind, language and notation, as well as method.}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 The standard inherits many concepts from system thinking, especially the fact that a system is made of components in interactions, and that the complete system cannot be understood only by understanding each component independently [von Bartallanfy]. It also borrows from the discipline of complexity management and leverages modelling artifacts as first class citizens of the architecture description. This approach in addressing the inherent complexity of today\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s socio-technical systems is opposed to analytical methods (such as functional decomposition), and natively integrates principles such as separation of concerns (through the mechanism of the views) and abstraction (through the technique of modelling). Modelling a system by multiple views is therefore seen as a strong enabler for designing system architecture: the concerns of the many stakeholders are addressed, from various interdependent perspectives, including the technical concerns in the form of the quality attributes [@Zeist1996;@VanZeist1996]. This approach was already in use before the development of the standard, and we can consider it as a generalisation of well-known approaches in software analysis and design, such as the 4+1 views [@Kruchten1995], but also approaches dedicated to specific domains, such as the conceptual, logical and technical views on data models.}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 Although the standard prescribes that multiple perspectives on the system are needed, it does not prescribe what concerns to address, what viewpoint is the uttermost important. It is supposed to support all paradigms, and leaves the identification of the viewpoints and interdependence rules to the specific architecture framework (and architecture description language, ADL). And although it prescribes that each architecture view is governed by its governing viewpoint, it does not prescribe how an architecture view should be modelled, except that it should follow the conventions of its governing viewpoint. As such it can be considered a general framework for architecture description.}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 ArchiMate is an ADL that was initially developed in the scope of a research project by the Dutch research institute Novay/Telematica Instituut, from 2002 to 2004. It became a technical standard from The Open Group in 2008. The structure of the language is based on the predecessor of ISO42010, the IEEE Standard 1471:2000. Besides the ArchiMate language, a major outcome of the ArchiMate project is the prescription of the 3 dimensions along which a system (specifically an enterprise) should be described (also known as the aspects of the system)[REF: Marc Lankhorst et. al., Enterprise Architecture at Work, 2017]: the active structure, the behaviour and the passive structures. The active structure is made of the structural elements of the system capable of performing activity, i.e. the subjects of activity. The behaviour is performed by the active structure (process, function, service). The passive structure is made of the objects on which behaviour is performed, the objects of activity. The definition of each aspect includes the interdependency amongst the aspects: active structural elements are assigned to behavioural elements, behavioural elements act on passive structural elements.}
\par\plain {\f0\fs24\b0\i0  }
\par\plain {\f0\fs24\b0\i0 The ArchiMate language, as an outcome of the ArchiMate research project, does support the description of an (enterprise) system according to those 3 aspects, and the language provides constructs to conceptualise elements of each of these dimensions: actor and role to capture active structure, process and function to abstract behaviour, business and data object to represent passive structure. Moreover, those 3 aspects can be considered from multiple perspectives, and especially the business, the application and the technology perspectives, and the dependencies amongst them are managed by applying the layering patterns (elements of lower layer may not depend upon elements of upper layer). As a modern ADL, ArchiMate language supports the description of a system from multiple viewpoints and introduces a mechanism to define those viewpoints. As such, it does conform to the standard of architecture description ISO42010. }}