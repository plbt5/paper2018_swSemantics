{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 In [@Lankhorst2017, sec.3.3], the authors emphasise the importance of semantics and argue that distinct views still have something in common, namely the semantics of the architecture. They position semantics as the formal (that is, mathematical) interpretation of symbolic models in mathematical objects. An abstraction of reality then refers to reality by interpreting the symbols of the symbolic model, a view that is considered common in the architecture discipline. Their implementation of this view is to focus on the formal semantics of the architecture language that is applied. We can appreciate this approach, and where ArchiMate indeed improves on the ontological commitment over that of UML, it remains oriented towards the system models only and can be considered therefore complementary to our approach that focuses to describe, as faithfully as possible, the DoA.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The use of ontologies as information model is suggested before. [@Almeida2018a] represents a typical discussion on the foundations of an ontological-based architecture for organising information and knowledge. They too consider the use of a top-level ontology (BFO). Not unlike many other publications that discuss the use of ontologies to account for semantics, the authors are merely concerned with provisioning an ontological perspective on the DoA, and do not consider its principled position in a software architecture. Vice versa, in literature on software architecture, many authors emphasise the need for an information view or model to account for semantics, and obviously provide for its relation with other views and models in that architecture. In fact, this can be considered the current view in leading architectural frameworks such as TOGAF, RM-ODP, ISO42010. As we stated earlier, these information views neglect the influence of the modelling language as ontological commitment on semantics, the semiotic foundations and its subsequent explicit separation between the semantic and pragmatic meaning.  }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We have to go back to [@Krishnamurthy1988; or @Su1989] for a software architecture that explicitly considers semantics of data and also provides a framework for representing data and knowledge integrated. These authors combine object-orientation with AI knowledge representation techniques - to our knowledge the only proposal to integrate knowledge rules as necessary elements to a class definition. They also distinguish from other object-oriented approaches by allowing different classes to model different perspectives of the same object without running into the problem of multiple inheritance. Together, this comes close to our ASM except for our emphasis on coherence between the semantic and pragmatic meaning, and, the need for an ontological commitment.}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 The differentiation between knowledge and information in order to abstract from idiosyncrasies of specific technology is fundamental in the openEHR framework^[https://www.openehr.org/, accessed Jan 24, 2020] with CEN 13606 as its accompanying European and ISO standard. It was introduced and further elaborated by Beale and co-authors [@Beale:2001vz;@Beale2007a;@Beale2008a;@Beale2007;@Beale2008;@Beale2007b;@Beale2007c]. This paradigm modelled the generic knowledge apart from the specific information structures, allowing the former to constrain the latter. Knowledge is \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93statements which say how instances of a reference model should be constrained to form a valid business entity of some kind\u8221\'94. Those statements are embodied by }{\f1\fs24\b0\i1 archetypes}{\f0\fs24\b0\i0 . The Archetype Model (AM) can be considered a meta-model or modelling language to express archetypes, very similar to the ontologies that specify the ASM. The Reference Model (RM) is also a meta-model that forms the language for the information models that carry the actual data. Since the AM constrains the RM, the specified archetypes constrain the interpretation of the generated data. This makes the openEHR framework a Semantic Web avant-la-lettre. However, these constraints apply to the validity of the data structures and values only, and despite the implicit ontological commitment, which is rather oriented to software characteristics, this paradigm too lacks the need for coherence between the semantic and pragmatic meaning.}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 [@Bachmann2007] propose an approach to Ontology-based Software Engineering (OBSE) that identifies the use of ontologies in the process of software engineering. Software engineering projects inherit from existing ontologies in their early (analysis and modelling) phases and offer (parts of) their results for further ontology development and evolution. This approach makes sense, particularly when we acknowledge that business requirements analysis is often hampered by ambiguities and misunderstandings that occur between domain experts and requirements analysts. The application of OBSE in any form isn\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t rare anymore. Still, this approach takes the process perspective while our approach is oriented towards the role and meaning of semantics in software and their consequential semantic artefacts. Where we consider ontologies as first-class citizen for a software architecture, they consider ontologies as a means to develop the architecture. Given their complementary perspectives we do not see any objections  to merge both approaches.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 [@Carraretto2012]provide initial steps for a principled two-level approach: an ontological level that essentially provides for a vocabulary that is used at the information level to formulate an *information model* addressing concerns about *reference* (how to identify things), *measurement* (how to qualify properties of things), *history tracking* (how to register evolution) and *time* (how to model events). We appreciate the idea that reusing the conceptual (i.e., backward-looking) model by what the authors call the information level (i.e., forward-looking models) demands one or more relations between them. In our opinion the core question is what types of relationship are required and appropriate, and what types should be omitted. We seek our answer in the distinction between the semantic concerns of the backward-looking ontology and the behavioural concerns of the forward-looking models, as opposed to the characteristics of the ontology alone.      }
\par\pard\plain \ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Research into the use of Stamper\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s semiotic framework [@Stamper1991] in the context of system integration [@Li2013; and @Li2014] and for elaborating characteristics and attributes of information [@Boell:2010ub], are examples of the recognition of the role of semiotics in ICT. Here, semantics and pragmatics are relates as well, although not as strict as our reciprocity, and a knowledge-in-action view on information is considered: the latter representing the semantics that are put in the pragmatics of the former. Li positions semantics in the formal information system layer (an ICT artefact). This formal layer is encompassed by the informal layer that is bounded by the organisational system. The latter provides the pragmatics that are necessary to improve operational efficiency, and reduces faults induced by lack of context and differences in background knowledge and beliefs.      }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 [@A\loch\af0\hich\af0\dbch\af0\uc1\u223\'DFmann2006] discuss the use and place of ontologies and meta-models in the MDE paradigm. They conclude, like us, that meta-models prescribe the capabilities of the modelling language. Their objective is to find a proper place for ontologies in the MDE specification hierarchy as defined by OMG\u8217\'92s meta-pyramid, the standard four layer MOF hierarchy. We value their conclusions that ontologies can be applied as descriptive standardized domain models, domain specific languages or modelling (descriptive) languages. Our investigation into the nature of semantics, the necessary consideration of the semiotic triangle, the placement of ontologies, models and meta-models in architecture, however, leads us to more specific conclusions on the relationship between semantics, ontologies and system models. Like [@A\u223\'DFmann2006], [@Gasevic2006a] consider ontologies and the MDE paradigm, specifically oriented towards applications of the MDA for ontology development on the Semantic Web. That is closely related to OMG\u8217\'92s initiative to standardise the Ontology Definition Metamodel (ODM) using the MOF. Part-II on MDA and Ontologies is particularly relevant to our work as it tries to establish the relationship between the various domain and system models. We appreciate their impressive modelling technique to incorporate ontologies in the MOF, but conclude again that such a normative modelling framework does not consolidate semantics.         }
\par\pard\plain \ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 An interesting initiative about a further *semantic* validation can be found in [@Szlenk2006]. The authors define a verification of a class diagram on whether the intended model instances of the diagram satisfy the constraints that have been defined, and, where classifiers are applied consistently over the intended model instances. Despite the elaborate mathematical verification, it remains applicable to system modelling only due to the absence of a formal semantic grounding (\\cref\{domain-appropriateness-concerns\}). }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 According to the strict meta-modelling approach of OMG, an instance-of relation is only valid between subsequent layers in OMG\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s four-layer hierarchy, and its use within a single layer is prohibited. Hence, a model is an instance-of its meta-model. [@Atkinson:2001kl] discuss the inherent conflicts of this approach, coining *multilevel (meta)modelling* methods that distinguish between *linguistic instantiation* (an Object being the instance of its Class) versus *ontological instantiation* (a *Particular* tree that gives rise to acknowledging the existence of a *Universal* Tree). Linguistic meta-modelling assumes OMG\u8217\'92s four layer MOF hierarchy; for each of the adjacent pair of layers the meta layer is considered to model the types that the lower layer can instantiate. Adjacent layers are therefore connected by a type-instance relationship, denoted as }{\f1\fs24\b0\i1 linguistic instance-of}{\f0\fs24\b0\i0  (better relabelled }{\f1\fs24\b0\i1 conforms-to}{\f0\fs24\b0\i0  [@Bezivin2004; @Favre2004a] to prevent ambiguities by overloading the }{\f1\fs24\b0\i1 instance-of}{\f0\fs24\b0\i0  label). Contrarily, ontological meta-modelling acknowledges only one single genuine }{\f1\fs24\b0\i1 instance-of}{\f0\fs24\b0\i0  relationship between the universals and their individuals. At the DoI, the conceptualisation also recognises subsets of supersets, which translates to the generalisation relationship [@Kuhne2006]. Although [@Atkinson2003; and @Atkinson2011] clearly identify the necessity for both modes of modelling, the method of their integration is not without issues [@Henderson-Sellers2012].}
\par\plain \f0\fs24\b0\i0}