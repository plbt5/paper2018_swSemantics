{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-13470\ql\ltrch\loch {\f0\fs24\b0\i0 The semantic concern of a software agent is to provide for a tangible, computational and distinct artifact as an explicit *frame of reference* in support of the internal workings of the agent itself: an explicit set of ideas or facts that the agent accepts and that directs the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s behaviour and decisions to achieve its goal. The intention of this section follows directly from the separation of concerns: this semantic concern must be separated from the rest of the concerns of the software agent into one single component. We consider this a necessary condition for consolidating semantics. To that end, we first present a foundation for understanding semantics and for that introduce the disciplines of semiotics and pragmatics. Based on this we can explain the limits of semantics in the realm of software, show the emergence of a semantic monolith, derive its optimal atomic size and establish the need to enforce coherence between semantic meaning and pragmatic meaning. In doing so we derive design principles for constructing the semantic component.}}