{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 monospace;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-11066\ltrch\loch {\f0\fs24\b0\i0\cf1 The discipline of semiotics is the study of signs, reality and meaning. The meaning of a *token* (text, graphics, sound) ultimately relates to what it denotes in reality (the *entity*), whilst this relation cannot be deferred from the shape, structure or other characteristics of the token itself due to its total arbitrariness. De Saussure used a dyadic model for the ***semiotic sign***, that stressed that the token and the entity were as inseparable as the two sides of a piece of paper (Saussure 1959). This \loch\af0\hich\af0\dbch\af0\uc1\u8216\'91self-containment of the sign\u8217\'92 remains one of the major principles of semiotics. Constructing the semiotic sign from its distinct parts is called ***semeiosis***. The token, in combination with their ability for semeiosis, provide humans with the tool to converse with each other. Meaning, then, emerges as a result of the semeiosis that connects the distinct parts of the inseparable semiotic sign. In the remainder of this paper, with \u8220\'93sign\u8221\'94 we always mean the semiotic self-contained sign and never mean the token only.}
\par\plain \f0\fs24\b0\i0\cf1
\par\plain {\f0\fs24\b0\i0\cf1 Sanders Peirce (in: Sowa 2000) developed a triadic model of the semiotic sign, the semiotic triangle: a representamen (the token), an object (the entity), and the interpretant which expresses the mental and, hence, individual sense making (Figure 2.1(a)). The semiotic triangle was used and modified by Ullmann (Ullmann 1962), Ogden and Richards (Ogden and Richards 1989), [@Falkenberg1998] and many others, also in recent years (Kuhn 2009). We introduce our modifications, as depicted in Figure 2.1(b), which mainly focus on naming conventions in IT architectures, leaving the essence of the triangle unmodified as follows.}
\par\plain \f0\fs24\b0\i0\cf1
\par\plain {\f0\fs24\b0\i0\cf1 ![The triadic model of the semiotic sign, according to Peirce (a), and modified by us (b). Example (c) shows the concept of a cat named \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93Yojo\u8221\'94][def:semtriangles]}
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0\cf1 We prefer the use of *(germane) entity* due to the ambiguous nature of *object* in IT. We consider an entity to stand for an individual thing or event, but also for a group of entities, or a category, or a relation between entities and a property of an entity. W}{\f0\fs24\b0\i0 e refer to *germane entities* when their relevance to software agents is a necessary distinction to make as opposed to the many other entities in reality that are irrelevant to consider. }{\f0\fs24\b0\i0\cf1 We refer to the *interpretant* component as the *conceptualisation*, to underline the individual conceptualisation that is being formed during requirements analysis and conceptual modeling, and typographically denote its elements as a [|concept]. And we prefer *token* over *representamen*, and consider it both an atomic element and a particular composition of atomic elements, typographically denoted as $\\token\{token\}$. We include denotations for the edges that are connected to the conceptualisation component, and use names that underline the individual and mental nature of the sense making. These names are directional, and must be read as the transformation that takes place in that direction: denoted as $\\alpha$, an entity is *abstracted* into a conceptualisation; denoted as $\\delta$, a conceptualisation is *represented* by a token; denoted as $\\mu$, a token *represents* an entity. This theory clarifies the often heard phrase in modelling to \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93never confuse the model for the real thing\u8221\'94, by emphasising that $\\mu = \\delta }{\f1\fs24\b0\i0 \\circ}{\f0\fs24\b0\i0\cf1  \\alpha$. Finally, we add the causal characteristics that the edges represent, introduced by [@Ogden1989], as *adequacy* and *correctness*. The connection between the token and the entity, *trueness*, is a dashed line because its existence is indirectly only through the conceptualisation and does not exist in any direct means. This trueness characteristic is imputed, since it is dependent on the particular choices that have been made on abstraction and representation. A well-known example of a sign is depicted in \\cref\{fig:semiotic-triangles\}(c): when we talk about $\\token\{yojo\}$, our cognition interprets it as our [|cat]. This foundation on semantics}{\f0\fs24\b0\i0  adopts the so-called *code model* and assumes (i) that the code (token) to encode/decode is shared, and (ii) that the encoding and decoding components can associate the thought with the tokens. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The discipline of pragmatics studies the ways in which context, pre-existing knowledge, and intent contributes to meaning. Indeed, where grammars are capable of generating linguistically ingenious and complex strings of tokens that represent meaning, pragmatics suggest that comprehension involves more than a decoding grammar, rejecting the assumption that en/decoding components associates thoughts and tokens [@Sperber1995]. Different than the code model, the *inferential model* describes comprehension as an inference process that starts from a set of premises and results in a set of conclusions that are warranted by them [@Grice:1991BT]. Grice thus discerns the latter *pragmatic meaning* from the former *semantic meaning*, providing the insight that both models might be different but not incompatible and both have their place in semantics. Where the semantic meaning points to \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93what is said\u8221\'94, we understand the pragmatic meaning as the meaning based on rules governing the use of the semantic meaning, the comprehension process with its contextual (pragmatic) factors governing disambiguation and reference assignment, viz. \u8220\'93how it connects with our frame of reference\u8221\'94. With *reference framework* we refer to its usual connotation as \u8220\'93a set of ideas or facts that a person accepts and that influences the person\u8217\'92s behaviour, opinions, or decisions\u8221\'94[^FoR]. In other words, the pragmatic meaning has the capability to position the semantic meaning in the specific purpose of the application for its appropriate use. For example, the semantic meaning of a heartbeat is about the number of beats per second, e.g., \\token\{128 BPM\}. Unfortunately, knowing \\token\{128 BPM\} is insufficient to draw conclusions, since the very same bits can refer to very different health conditions for elderly or new-borns, or even refer to an indication of performance potential in a sports application as opposed to the former health condition.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We consider the distinction between the code and inferential models an essential disposition towards software semantics and stipulate that by providing the following definitions:  }
\par\pard\plain \ri-11066\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdef\}[Semantic meaning]\\label\{def:semantic-meaning\}}
\par\plain {\f0\fs24\b0\i0 The semantic meaning refers to the explanation by the code model on how tokens refer to entities in reality, and particularly to the representation that is given to a germane entity.}
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain {\f0\fs24\b0\i0 >The token is connected to a concept from the conceptualisation by means of its underlying formal semantics. Consequently, the semantic meaning is bound by the capabilities of the underlying formal semantics. Sometimes we will use the terms *semantic meaning* and *data* interchangeably, but they are not synonymous since the former relates to the human semeiosis and the latter to a software artifact. We consider the data the vehicle that carries the semantic meaning.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 \\begin\{mmdef\}[Pragmatic meaning]\\label\{def:pragmatic-meaning\}}
\par\plain {\f0\fs24\b0\i0 The pragmatic meaning refers to the explanation by the inferential model that comprehension refers to a process which infers the consequences of the semantic meaning. Pragmatic meaning constitutes inference patterns and constraints which augment our frame of reference, i.e., context, background knowledge and intent, from an initial (set of) fact(s), its premises. }
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain {\f0\fs24\b0\i0 >The pragmatic meaning positions the semantic meaning in the specific purpose of the application for its appropriate use. The expressiveness of the reference framework is bound by power of the underlying logic, whereas its conclusiveness is determined by the capability of the formulated inference rules. Again, we will use the terms *pragmatic meaning* and *data processing code* interchangeably, but again these are referring to the human comprehension and a software artifact, respectively. We consider the data processing code the vehicle that carries the pragmatic meaning.}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdef\}[Semantics]\\label\{def:semantics\}}
\par\plain {\f0\fs24\b0\i0 Semantics denotes the indirect relationship that exists between the token and the entity as well as how we comprehend that relationship against our own frame of reference. The indirect relationship itself can only emerge under the influence of the causal abstraction and representation relationships, where the code model explains why this relationship is an indirect one and why it demands the self-containment of the sign. The inferential model explains how the sign warrants our subjective comprehension by connecting it to our individual context of application, knowledge and intent. }
\par\plain {\f0\fs24\b0\i0 \\end\{mmdef\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 These semiotic and pragmatic principles are fundamental to engineering semantics into software. This leads to the following design principle; we apply the normative notation from [@Greefhorst2011]): }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16946\ql\ltrch\loch {\f0\fs24\b0\i0 \\begin\{mmdp\}[Semiotic-pragmatic principle]\\label\{dp:semiotic-pragmatic\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Engineering semantics in software is not limited to the semantics of data, i.e., the semantic meaning, but includes the semantics of data processing code, i.e., the pragmatic meaning, as well.     }
\par\plain {\f0\fs24\b0\i0  }
\par\pard\plain \ri-16946\ltrch\loch {\f0\fs24\b0\i0 \\textbf\{Type of information:\} business  \\\\}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Quality attributes:\} suitability, understandability, operability, explicitness, stability, reusability   \\\\}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Rationale:\}}
\par\plain {\f0\fs24\b0\i0 \\begin\{enumerate\}}
\par\plain {\f0\fs24\b0\i0   \\item Semiotic and pragmatic theories are widely accepted to influence semantics;}
\par\plain {\f0\fs24\b0\i0   \\item By acting on semiotic principles alone, semantics is defied its pragmatic meaning;}
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0   \\item The data are the vehicle that carries the semantic meaning;}
\par\plain {\f0\fs24\b0\i0   \\item The data processing code is the vehicle that carries the pragmatic meaning.  }
\par\pard\plain \ri-16946\ltrch\loch {\f0\fs24\b0\i0 \\end\{enumerate\}}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Implications:\}}
\par\plain {\f0\fs24\b0\i0 \\begin\{enumerate\}}
\par\plain {\f0\fs24\b0\i0   \\item To get control over both the semantic meaning and the pragmatic meaning is a necessary prerequisite for controlling semantics.}
\par\plain {\f0\fs24\b0\i0 \\end\{enumerate\}  }
\par\plain {\f0\fs24\b0\i0 \\end\{mmdp\}}
\par\pard\plain \ri-11066\ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 To the best of our knowledge the impact of particularly the pragmatic meaning on semantics is often neglected in software architectures. In fact, we observe that whenever the pragmatic meaning is addressed it is considered in terms of functional requirements, business rules or process models, i.e., as rules and operations that unequivocally belong to the behavioural perspective of a software agent. One particular form that the distinction between semantic meaning and pragmatic meaning adopts is that of context-awareness: although it does recognise that the application behaviour changes for different contexts, at the same time it neglects the fact that context is a causal consequence of the pragmatic meaning, as opposed to context being an environmental notion that stands on its own. We conclude that pragmatic meaning is often disguised as behaviour and defend the need for the distinction between the comprehension and behavioural parts of a software agent. With comprehension we understand operations such as inferencing, drawing conclusions, deriving consequences, applying constraints or further specialisation to finer semantic granularity; we understand behaviour as actions, operations that realise the emergence of a certain effect or achieve a predefined goal or desired end result. We consider behaviour under control of the application model of the agent whereas the comprehension is under control of the Domain Model. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 \\begin\{mmdp\}[Separate comprehension from behaviour]\\label\{dp:comprehension-behaviour\}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Make a distinction between operations that follow from the inferential model (data processing) and those that realise actions in order to achieve a certain goal of the application.  }
\par\pard\plain \ri-11066\ltrch\loch {\f0\fs24\b0\i0 \\textbf\{Type of information:\} business, application  \\\\}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Quality attributes:\} (semantic) accuracy, reusability, consistency   \\\\}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Rationale:\}}
\par\plain {\f0\fs24\b0\i0 \\begin\{enumerate\}}
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0   \\item The inferential model describes the comprehension process with which the semantic meaning is positioned into a specific context of use;  }
\par\plain {\f0\fs24\b0\i0   \\item The behavioural perspective refers to the capability of the software agent to act and how it achieves the desired end result;}
\par\plain {\f0\fs24\b0\i0   \\item The behavioural perspective operates on the basis, and under the influence, of a well-defined state of affairs;}
\par\plain {\f0\fs24\b0\i0   \\item Although both the comprehension and the behaviour share being dynamic, they are complementary to each other since the former selects the particular behaviour that applies.}
\par\pard\plain \ri-11066\ltrch\loch {\f0\fs24\b0\i0 \\end\{enumerate\}}
\par\plain {\f0\fs24\b0\i0 \\textbf\{Implications:\}}
\par\plain {\f0\fs24\b0\i0 \\begin\{enumerate\}}
\par\plain {\f0\fs24\b0\i0   \\item Separating the inference model from the behavioural perspective allows for transparency between both: neither the behavioural perspective needs to know how comprehension is being established, nor does the inference model needs to know the consequences of a certain state of affairs;}
\par\plain {\f0\fs24\b0\i0   \\item The semantic model can now emerge as a strict coupling between the semantic meaning and the pragmatic meaning, which then becomes the one and only component that represents one particular perspective with a particular interpretation on the domain of application;}
\par\plain {\f0\fs24\b0\i0   \\item The state of affairs represent the main interface between the semantic model and the behavioural models;}
\par\plain {\f0\fs24\b0\i0   \\item Any condition or conclusion or specific piece of information that is required by the behavioural models, must be addressable as state of affairs that is to be delivered, timely, by the semantics model;}
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0   \\item Being a component of its own allows semantics to become subject to quality criteria, particularly on accuracy, consistency, evolution, maintainability and reusability. }
\par\pard\plain \ri-11066\ltrch\loch {\f0\fs24\b0\i0 \\end\{enumerate\}  }
\par\plain {\f0\fs24\b0\i0 \\end\{mmdp\}}
\par\pard\plain \ri-11066\ql\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 We present the following heuristic (an intermediate means towards a principled approach) to separate comprehension from }{\field{\*\fldinst HYPERLINK "scrivcmt://32F674BD-3012-425D-99C4-3ADE4E9F87E6"}{\fldrslt\f0\fs24\b0\i0 behaviour}}{\f0\fs24\b0\i0 , as follows:}
\par\plain {\f0\fs24\b0\i0 \\begin\{mmh\}\\label\{heur:how-to-discern\}}
\par\plain {\f0\fs24\b0\i0 Comprehension and behaviour refer to processes that fulfil distinct purposes:}
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0   \\begin\{description\}}
\par\pard\plain \li17\fi-8\ltrch\loch {\f0\fs24\b0\i0     \\item[Comprehension processes] create data (events, states, or values alike) on the basis of input data (the premises for the comprehension process), (implicit) background knowledge, domain context and agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s beliefs in order to influence the agent\u8217\'92s behaviour, beliefs, or decisions;}
\par\plain {\f0\fs24\b0\i0     \\item[Behaviour processes] produce output that is directly observable by the user.}
\par\plain {\f0\fs24\b0\i0   \\end\{description\}  }
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0 \\end\{mmh\} }
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ri-11066\ltrch\loch {\f0\fs24\b0\i0\cf1 <!-- page additions -->}
\par\plain \f0\fs24\b0\i0\cf1
\par\pard\plain \ri-11066\ql\ltrch\loch {\f0\fs24\b0\i0 [^FoR]: Cambridge Dictionary, https://dictionary.cambridge.org/dictionary/english/frame-of-reference, accessed Feb 2019}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-11066\ltrch\loch {\f0\fs24\b0\i0\cf1 [def:semtriangles]: src\\images\\SemioticTriangles.png \{#fig:semiotic-triangles width=90%\}}
\par\pard\plain \ri-10760\ltrch\loch \f0\fs24\b0\i0\cf1}