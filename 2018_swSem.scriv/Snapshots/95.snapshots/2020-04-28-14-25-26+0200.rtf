{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ri-16946\ql\ltrch\loch {\f0\fs24\b0\i0 The principles behind the concept of the ASM represent the basis for the definition of a view: semantic coherence (\\cref\{dp:semantic-coherence-principle\}) and atomicity (\\cref\{dp:atomicity\}) are indeed at the core of addressing the semantic concerns in terms of the system\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s architecture. To address semantics, the ASM includes not only the elements of the passive structure (information and data objects), but also the behaviour structure (rules and processes) acting on the passive structure for each element of the active structure (the agents of the system). The coherence principle (\\cref\{dp:semantic-coherence-principle\}) edicts that both aspects cannot be separated, but also establishes rules on how to guarantee that the coherence is maintained. The atomicity principle (\\cref\{dp:atomicity\}) edicts that the scope of the ASM in terms of structural elements, should be delimited by what is required to express a semantic element. Combining those principles guarantees  that the foundational design principle of high cohesion is applied when addressing the semantic concerns associated with the system. We therefore state that the ASM itself subsumes the semantic viewpoint of the system and needs to be integrated as such in the architecture description of the system. This viewpoint conforms with ISO42010, and is an instance of the generic viewpoint: it does address the semantic concerns of the stakeholders , and it is described by semantic models covering both the passive and the behaviour structure of the system.}
\par\plain {\f0\fs24\b0\i0  }
\par\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 ADLs such as ArchiMate only partially support the ASM viewpoint: they provide the required construct to identify the data (passive structure) and the data processing (behaviour), as well as the agent (active structure) assigned to the behaviour. They however lack the support for actual semantic description. It is quite common for ADLs, to be considered a higher level modelling language, and to be complemented with lower-level language (such as BPMN in the description of business processes). \\Cref\{dp:language-appropriateness-principle\} brings ontological commitment as the foundation for language appropriateness. We consider this as the bed for a language specification dedicated to the design of models belonging to the semantic view. It is the model kind that the ISO42010 standard defines as part of the definition of a viewpoint, which captures the conventions for a type of modelling: it requires that the models belonging to a view are expressed in a modelling language specified in the governing viewpoint. This principle, therefore, even strengthens the definition of a viewpoint according to the standard, and the ASM defines a viewpoint, but also provides with the requirements for the language supporting the description of a view according to the governing viewpoint.  }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 The authors of [@Bouck2008] focus on the relations between architectural views and conclude these to be essential for establishing architectural consistency and for maintaining that consistency over time. To that end they have defined several criteria that characterise relations between views. }{\field{\*\fldinst HYPERLINK "scrivcmt://D2F281F6-C1FB-45A9-B266-EDE8695766CA"}{\fldrslt\f0\fs24\b0\i0 We refer to their publication for the definition of the criteria, and conclude that our proposed *Use* relation contributes to the criteria on *consistency checking*, *composition*, and represents an *inter-* as opposed to an intra-model type relation, a *horizontal* relation that relates *models*, and more specifically, uses a *tuple* construct over elements between models, where:}}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 --------------------------------------------------------------------------------------------------------------------------------}
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 Characteristic       Definition (adapted from \\cite\{Bouck2008\})            Relation between ASM and other views}
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 -------------------- ----------------------------------------------------- -----------------------------------------------------}
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 **Consistency**      The information in several views does not             By definition, the *Use* relation enforces alignment }
\par\plain {\f0\fs24\b0\i0                      conflict.                                             between related models. Hence, information about the}
\par\plain {\f0\fs24\b0\i0                                                                            DoA cannot conflict with information from other views                               }
\par\pard\plain \ri-16974\ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 **View composition** Allow for integration of information from             The *Use* relation is $1:n$, implying that several   }
\par\plain {\f0\fs24\b0\i0 (a.k.a. \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93merging\u8221\'94 or several views.                                        models can apply the same elements from the ASM. }
\par\plain {\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93integration\u8221\'94 of }
\par\plain {\f0\fs24\b0\i0 views)      }
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 **Relation type**    Inter model type relations involve models of          Inter model type only }
\par\plain {\f0\fs24\b0\i0                      different types, whereas intra model type}
\par\plain {\f0\fs24\b0\i0                      relations allow for relations between models}
\par\plain {\f0\fs24\b0\i0                      of identical type.}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 **Level of Detail**  Relations can be described between complete           tbd }
\par\plain {\f0\fs24\b0\i0                      views, between models, or between architectural}
\par\plain {\f0\fs24\b0\i0                      elements inside views.}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 **Horizontal vs.     The term *horizontal* is used for relations           tbd      }
\par\plain {\f0\fs24\b0\i0 Vertical Relations** between views at the same level of abstraction;  }
\par\plain {\f0\fs24\b0\i0                      *vertical* relations are either relations between  }
\par\plain {\f0\fs24\b0\i0                      views at different levels of abstraction, e.g.,}
\par\plain {\f0\fs24\b0\i0                      refinements or relations with other }
\par\plain {\f0\fs24\b0\i0                      representations.}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 **Model vs.          View relations are stated with reference to a         tbd}
\par\plain {\f0\fs24\b0\i0  Metamodel**         metamodel or between either models or metamodels.  }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ltrch\loch {\f0\fs24\b0\i0 $\\;$}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ri-17053\ql\ltrch\loch {\f0\fs24\b0\i0 **Tuple constructs** Realise the relation as instances of the              tbd }
\par\plain {\f0\fs24\b0\i0                      cartesian product between the two related models. }
\par\plain {\f0\fs24\b0\i0                      Other constructs that are used to realise the }
\par\plain {\f0\fs24\b0\i0                      relation are *direct references* and }
\par\plain {\f0\fs24\b0\i0                      *expression language*, but not here.}
\par\pard\plain \ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16974\ql\ltrch\loch {\f0\fs24\b0\i0 --------------------------------------------------------------------------------------------------------------------------------}
\par\pard\plain \ri-16974\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ri-16963\ql\ltrch\loch \f0\fs24\b0\i0}